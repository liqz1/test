<?xml version="1.0" encoding="UTF-8"?>
<!--

采用语义化版本规则：major.minor.fix, 当依赖项的版本有变更时，本版本则在低的一级别进行变更，如assertj 从1.x升级到2.x，则本version的major不动,minor升级，如junit从2.3.1升级到2.3.2，则本version不变。

第三方依赖导致的版本升级示例：
1：第三方依赖major版本升级，则ispeco-parent版本minor升级
mariadb-java-client.version从1.5.9升级到2.0.3，ispeco-parent版本从7.2.1升级到7.3.0
2：第三方依赖minor版本升级，则ispeco-parent版本fix升级
logging.log4j.api.version从2.8.2升级到2.11.0，ispeco-parent版本从7.5.8升级到7.5.9
3：第三方依赖fix版本升级，ispeco-parent版本不变
mariadb-java-client.version从2.2.4升级到2.2.5（2.2.5修正了2.2.4中的bug），ispeco-parent版本不变。
4：新增第三方依赖，等同于第三方依赖majro版本变更，则ispeco-parent版本minor升级。

其余情况参照语义化版本规则进行变更（http://wiki.ispeco.com/pages/viewpage.action?pageId=79236396）。

















-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <!-- http://maven.apache.org/pom.html pom大全. -->
  <groupId>com.supermap.ispeco</groupId>
  <artifactId>ispeco-parent</artifactId>
  <!-- 采用语义化版本规则：major.minor.fix, 当依赖项的版本有变更时，本版本则在低的一级别进行变更，如assertj 从1.x升级到2.x，则本version的major不动,minor升级，如junit从2.3.1升级到2.3.2，则本version不变。 -->
  <version>11.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>supermap-ispeco-parent</name>
  <url>http://ispeco.com</url>
  <inceptionYear>2009</inceptionYear>
  <organization>
    <name>SuperMap</name>
    <url>http://supermap.com</url>
  </organization>
  <licenses>
    <license>
      <name>SuperMap GIS</name>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>iSpecor</id>
      <name>SuperMap iSpecor</name>
      <email/>
      <url>http://ispeco.com</url>
      <organization>SuperMap</organization>
      <organizationUrl>http://supermap.com</organizationUrl>
      <timezone>+8</timezone>
      <properties>
        <picUrl>http://wiki.ispeco.com/download/attachments/393217/disc_48x48.png</picUrl>
      </properties>
    </developer>
  </developers>
  <contributors>
    <contributor>
      <name>SuperMapper</name>
      <email/>
      <url>http://supermap.com</url>
      <organization>SuperMap</organization>
      <organizationUrl>http://supermap.com</organizationUrl>
      <roles>
        <role>tester</role>
      </roles>
      <timezone>+8</timezone>
    </contributor>
  </contributors>
  <distributionManagement>
    <!-- use the following if you're not using a snapshot version. -->
    <repository>
      <id>release_maven</id>
      <name>iSPECO Maven Release Repo</name>
      <url>http://maven.ispeco.com/releases</url>
    </repository>
    <!-- use the following if you ARE using a snapshot version. -->
    <snapshotRepository>
      <id>snapshot_maven</id>
      <name>iSPECO Maven Snapshot Repo</name>
      <url>http://maven.ispeco.com/snapshots</url>
    </snapshotRepository>
  </distributionManagement>
  <scm>
    <connection>scm:svn:http://svn.ispeco.com/svn/dev/trunk/</connection>
    <developerConnection>scm:svn:http://svn.ispeco.com/svn/dev/trunk/</developerConnection>
    <tag>HEAD</tag>
    <url>http://svn.ispeco.com/svn/dev/trunk/</url>
  </scm>
  <properties>
    <!-- 按照 项目属性、插件版本、依赖版本顺序，版本属性按照字母顺序排列。 -->
    <!-- <altDeploymentRepository></altDeploymentRepository> -->
    <!-- 注意！！！要先升级各个具体的modules中的version，构建并deploy成功之后，再修改提交本ispeco-parent文件中对应的ixxx.version属性。 -->
    <ibase.version>11.0.0-SNAPSHOT</ibase.version>
    <!-- ibase-commons 代码放在gitlab上. -->
    <ibase-commons.version>9.1.1-SNAPSHOT</ibase-commons.version>
    <iserver.version>11.0.0-SNAPSHOT</iserver.version>
    <iportal.version>11.0.0-SNAPSHOT</iportal.version>
    <iexpress.version>11.0.0-SNAPSHOT</iexpress.version>
    <online.version>10.2.0-SNAPSHOT</online.version>
    <online.license.client>10.1.0-SNAPSHOT</online.license.client>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.sourceEncoding>UTF-8</project.reporting.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <repo.releases.updatePolicy>interval:30</repo.releases.updatePolicy>
    <repo.snapshots.updatePolicy>interval:15</repo.snapshots.updatePolicy>
    <!-- surefire skipTests -->
    <skipUTs>false</skipUTs>
    <!-- pitest @sonar -->
    <sonar.pitest.mode>reuseReport</sonar.pitest.mode>
    <!-- The destination file for the code coverage report has to be set to the same value
         in the parent pom and in each module pom. Then JaCoCo will add up information in
         the same report, so that, it will give the cross-module code coverage. -->
    <sonar.jacoco.itReportPath>${project.basedir}/../target/jacoco-it.exec</sonar.jacoco.itReportPath>
    <!-- support multilanguages, such as java, javascript, xml see: http://docs.sonarqube.org/display/SONAR/Analyzing+with+Maven#AnalyzingwithMaven-AnalyzingaMulti-languageProject -->
    <!--<sonar.language>java</sonar.language>-->
    <sonar.sources>src/main,pom.xml</sonar.sources>
    <!-- Set the sonar.java.source property to tell PMD which version of Java your source code complies to -->
    <sonar.java.source>${maven.compiler.source}</sonar.java.source>
    <sonar.web.file.suffixes>.html,.xhtml,.rhtml,.shtml,.ftl</sonar.web.file.suffixes>
    <!-- 顺序: web, properties, java(directory) -->
    <!-- 注意：sonar6.5版本只能读取单行，请不要换行. -->
    <sonar.ispeco-parent.exclusions>**/bootstrap*.css,**/filemanager.css,**/flat-ui.css,**/spectrum*.css,**/zTreeStyle.css,**/*.min.css,**/*-min-*.css,**/lib/**.css,**/libs/**.css,**/backbone*.js,**/bootstrap*.js,**/filemanager.js,**/jpicker*.js,**/jquery*.js,**/jQuery*.js,**/iclient9-mapboxgl.js,**/MicrosoftAjax.js,**/OpenLayers.js,**/qrcode.js,**/r.js,**/Silverlight.js,**/spectrum*.js,**/SWFObject.js,**/underscore*.js,**/*.min.js,**/SuperMap*.js,**/lib/**.js,**/libs/**.js, **/*Javadoc*.properties, **/com/supermap/services/iserver2/**,**/com/supermap/services/handler/**,**/com/supermap/internal/**,**/com/supermap/geoprocessor/**,    **/services-handler/**,**/geoprocessor-*/**</sonar.ispeco-parent.exclusions>
    <sonar.exclusions>${sonar.ispeco-parent.exclusions}</sonar.exclusions>
    <sonar.javascript.lcov.reportPath>target\coverage\total-coverage.dat</sonar.javascript.lcov.reportPath>
    <!-- <sonar.javascript.lcov.itReportPath></sonar.javascript.lcov.itReportPath> -->
    <!-- <sonar.javascript.forceZeroCoverage>true</sonar.javascript.forceZeroCoverage> -->
    <sonar.buildbreaker.skip>true</sonar.buildbreaker.skip>
    <!-- RandomizedTesting library system properties -->
    <tests.iters>1</tests.iters>
    <tests.seed/>
    <!-- 将nightly设置为true，确保这些案例在日常开发时都会被运行。 -->
    <tests.nightly>true</tests.nightly>
    <tests.weekly/>
    <tests.awaitsfix/>
    <tests.slow/>
    <plugin.antrun.version>3.0.0</plugin.antrun.version>
    <plugin.assembly.version>3.3.0</plugin.assembly.version>
    <plugin.bundle.version>5.1.2</plugin.bundle.version>
    <plugin.cargo.version>1.5.1</plugin.cargo.version>
    <plugin.clean.version>3.1.0</plugin.clean.version>
    <plugin.clirr.version>2.8</plugin.clirr.version>
    <plugin.cobertura.version>2.7</plugin.cobertura.version>
    <plugin.compiler.version>3.8.1</plugin.compiler.version>
    <plugin.scala.compiler.version>3.2.0</plugin.scala.compiler.version>
    <plugin.dependency.version>3.2.0</plugin.dependency.version>
    <plugin.deploy.version>2.8.2</plugin.deploy.version>
    <plugin.eclipse.version>2.10</plugin.eclipse.version>
    <plugin.enforcer.version>3.0.0</plugin.enforcer.version>
    <plugin.exec.version>3.0.0</plugin.exec.version>
    <plugin.failsafe.version>2.22.2</plugin.failsafe.version>
    <plugin.forbiddenapis.version>2.5</plugin.forbiddenapis.version>
    <plugin.frontend.version>1.12.0</plugin.frontend.version>
    <plugin.install.version>2.5.2</plugin.install.version>
    <!-- Sonar Java Plugin is compatible with JaCoCo 0.7.5 starting from Java Plugin 3.4. -->
    <!-- 0.7.5.201505241946会导致sonar某些版本出现：java.io.IOException: Incompatible version 1007 -->
    <plugin.jacoco.version>0.8.7</plugin.jacoco.version>
    <plugin.jar.version>3.2.0</plugin.jar.version>
    <plugin.jasmine.version>2.2</plugin.jasmine.version>
    <!-- javadoc unused -->
    <plugin.javadoc.version>3.3.0</plugin.javadoc.version>
    <!-- unused -->
    <plugin.jetty-mortbay.version>8.1.16.v20140903</plugin.jetty-mortbay.version>
    <!-- jmeter unused -->
    <plugin.jmeter.version>1.10.1</plugin.jmeter.version>
    <plugin.native2ascii.version>2.0.1</plugin.native2ascii.version>
    <!-- pitest unused -->
    <plugin.pitest.version>1.6.8</plugin.pitest.version>
    <plugin.proguard.version>2.4.0</plugin.proguard.version>
    <plugin.project-info-reports.version>3.1.2</plugin.project-info-reports.version>
    <plugin.remote-resources.version>1.5</plugin.remote-resources.version>
    <!-- unused -->
    <plugin.resources.version>3.2.0</plugin.resources.version>
    <plugin.selenium.version>2.3</plugin.selenium.version>
    <!-- used in iclient-android -->
    <plugin.shade.version>3.2.4</plugin.shade.version>
    <!-- unused -->
    <plugin.site.version>3.9.1</plugin.site.version>
    <!-- From maven-sonar-plugin 3.1, Maven < 3.0 is no longer supported. -->
    <!-- https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+Maven -->
    <plugin.sonar.version>3.9.0.2155</plugin.sonar.version>
    <plugin.surefire.version>${plugin.failsafe.version}</plugin.surefire.version>
    <!-- 2.14,2.15 写入的xml实际编码不是utf-8 -->
    <plugin.tomcat.version>2.2</plugin.tomcat.version>
    <plugin.versions.version>2.8.1</plugin.versions.version>
    <plugin.war.version>3.3.1</plugin.war.version>
    <!-- Akka 2.4.14 (Scala 2.11, 2.12 and Java 8+) -->
    <akka24.version>2.4.14</akka24.version>
    <akka23.version>2.3.16</akka23.version>
    <akka.version>${akka23.version}</akka.version>
    <aliyun-core.version>3.7.1</aliyun-core.version>
    <aliyun-dysms.version>1.1.0</aliyun-dysms.version>
    <aliyun-oss.version>3.13.0</aliyun-oss.version>
    <aliyun-ots.version>2.2.5</aliyun-ots.version>
    <aliyun-sdk-oss.version>${aliyun-oss.version}</aliyun-sdk-oss.version>
    <ant.version>1.10.3</ant.version>
    <apache-poi.version>4.1.2</apache-poi.version>
    <!-- 1.6 for java6, 1.7 for java7, 1.8 for java8, 1.9 for java9 -->
    <aspectj.version>1.9.7</aspectj.version>
    <!-- AssertJ 2.x requires Java 7 or higher (use the org.assertj.core.api.Java6Assertions entry point on Android)
AssertJ 3.x requires Java 8 or higher (use the org.assertj.core.api.Java6Assertions entry point on Android) -->
    <!-- //TODO: assertj 2.x/3.x和1.x的API有区别 -->
    <api-util.version>1.0.2</api-util.version>
    <assertj.version>3.20.2</assertj.version>
    <axis2.version>1.7.6</axis2.version>
    <antisamy.version>1.5.7</antisamy.version>
    <bouncycastle.version>1.69</bouncycastle.version>
    <bson4jasckson.version>2.9.0</bson4jasckson.version>
    <c3p0.version>0.9.5.5</c3p0.version>
    <cal10n.version>0.8.1</cal10n.version>
    <cas-client.version>3.6.2</cas-client.version>
    <cglib.version>3.2.6</cglib.version>
    <commons-beanutils.version>1.9.4</commons-beanutils.version>
    <commons-cli.version>1.4</commons-cli.version>
    <commons-codec.version>1.15</commons-codec.version>
    <commons-collections.version>3.2.2</commons-collections.version>
    <commons-collections4.version>4.4</commons-collections4.version>
    <commons-compress.version>1.21</commons-compress.version>
    <commons-configuration2.version>2.1</commons-configuration2.version>
    <commons-configuration.version>1.10</commons-configuration.version>
    <commons-dbcp.version>1.4</commons-dbcp.version>
    <commons-digester.version>2.1</commons-digester.version>
    <commons-digester3.version>3.2</commons-digester3.version>
    <commons-email.version>1.5</commons-email.version>
    <commons-exec.version>1.3</commons-exec.version>
    <commons-fileupload.version>1.4</commons-fileupload.version>
    <commons-io.version>2.6</commons-io.version>
    <commons-lang3.version>3.12.0</commons-lang3.version>
    <commons-logging.version>1.2</commons-logging.version>
    <commons-net.version>3.8.0</commons-net.version>
    <commons-pool2.version>2.11.1</commons-pool2.version>
    <commons-text.version>1.9</commons-text.version>
    <couchbase.version>1.1.0</couchbase.version>
    <!--spring集成rabbitmq时，自带的json转换器依赖的第三方jar-->
    <codehaus.jackson.version>1.9.13</codehaus.jackson.version>
    <cxf.version>2.7.8</cxf.version>
    <cxf-rt-transports-http-osgi.version>2.3.11</cxf-rt-transports-http-osgi.version>
    <disruptor.version>2.10.4</disruptor.version>
    <docker-java.version>3.0.13</docker-java.version>
    <ehcache.version>2.10.9.4.10</ehcache.version>
    <ehcache.server.version>1.0.0</ehcache.server.version>
    <ehcache.web.version>2.0.4</ehcache.web.version>
    <ehcache.debugger.version>1.7.1</ehcache.debugger.version>
    <ehcache3.version>3.7.1</ehcache3.version>
    <!-- caffeine需基于jdk1.8 -->
    <caffeine.version>2.8.1</caffeine.version>
    <esapi.version>2.2.3.1</esapi.version>
    <ezmorph.version>1.0.6</ezmorph.version>
    <!-- https://www.elastic.co/guide/en/elasticsearch/client/java-api/current/java-api.html
      We plan on deprecating the TransportClient in Elasticsearch 7.0 and removing it completely in 8.0.
      Instead, you should be using the Java High Level REST Client.    -->
    <elasticsearch.version>6.8.18</elasticsearch.version>
    <elasticsearch-client.version>6.8.18</elasticsearch-client.version>
    <expect4j.version>1.6</expect4j.version>
    <fastjson.version>1.2.78</fastjson.version>
    <fastjson.android.version>1.1.52.android</fastjson.android.version>
    <!--隐藏jasper报表复杂性的API-->
    <fdvs.version>5.3.0</fdvs.version>
    <!-- https://github.com/FluentLenium/FluentLenium -->
    <!-- Selenium 3 and Java 8 are required to run it. -->
    <fluentlenium.version>3.5.2</fluentlenium.version>
    <freemarker.version>2.3.31</freemarker.version>
    <genericdao.version>1.2.0</genericdao.version>
    <geomesa.version>2.2.0-sm_201223</geomesa.version>
    <!-- geomesa 2.2.0在使用gt20 -->
    <!-- Java 8 - GeoTools 15.x and above (OpenJDK and Oracle JRE tested)
         Java 7 - GeoTools 11.x to GeoTools 14.x (OpenJDK and Oracle JRE tested) -->
    <!-- http://docs.geotools.org/stable/userguide/welcome/upgrade.html
         http://docs.geotools.org/latest/userguide/build/install/jdk.html  -->
    <!-- GeoTools 12.0 now requires Java 7 and this is the first release tested with OpenJDK! geoPackage实现需要gt11.1版本及以上 -->
    <!-- geoPackage实现需要gt11.1版本及以上 -->
    <geotools.version>20.0</geotools.version>
    <geotrellis.version>3.3.0</geotrellis.version>
    <!-- geotrellis hbase相关jar版本号 geotrellis2.2.1以后 默认支持使用hbase2.x bdt提供修改版支持使用hbase1.x的版本 -->
    <geotrellis.sm.version>3.3.0-sm</geotrellis.sm.version>
    <glassfish.version>3.1.1</glassfish.version>
    <gp.version>[7.2.0-12723,8.0)</gp.version>
    <graphql-java.version>8.0</graphql-java.version>
    <greenmail.version>1.5.6</greenmail.version>
    <grizzly2.version>2.4.0</grizzly2.version>
    <grizzly1.version>1.9.57</grizzly1.version>
    <gson.version>2.8.8</gson.version>
    <gt.wfs.version>16.2</gt.wfs.version>
    <!-- https://github.com/google/guava/wiki/Release20 -->
    <!-- https://github.com/google/guava -->
    <!-- Guava 23.x包含两个交付件-jre, -android. 此处写-前面的版本号即可。 -->
    <guava.version>30.1.1</guava.version>
    <guava-retrying.version>2.0.0</guava-retrying.version>
    <xpp3_min.version>1.2.0</xpp3_min.version>
    <!-- //TODO: geomesa-hbase-datastore依赖的版本是2.6.1，3.3.1版本的protobuf会导致构造HBaseDataStore抛类加载异常 -->
    <protobuf.version>2.6.1</protobuf.version>
    <guice.version>4.2.0</guice.version>
    <gwc.version>1.13.0</gwc.version>
    <h2.version>1.4.197</h2.version>
    <!-- geomesa, bdt等都还在使用2.x的hadoop，先不升级到3.x -->
    <hadoop.version>2.9.2</hadoop.version>
    <hadoop3.version>3.1.0</hadoop3.version>
    <hamcrest.version>1.3</hamcrest.version>
    <hazelcast.version>3.12.1</hazelcast.version>
    <hazelcast.monitor.version>1.9.3.4</hazelcast.monitor.version>
    <hbase.version>1.4.4</hbase.version>
    <hessian.version>4.0.51</hessian.version>
    <hibernate.version>5.2.12.Final</hibernate.version>
    <httpasyncclient.version>4.1.4</httpasyncclient.version>
    <httpcore.version>4.4.14</httpcore.version>
    <httpclient42.version>4.2.6</httpclient42.version>
    <httpclient43.version>4.3.6</httpclient43.version>
    <httpclient44.version>4.4.1</httpclient44.version>
    <httpclient45.version>4.5.13</httpclient45.version>
    <!-- httpClient依赖到httpcore，一般来说httpClient的版本需要和httpcore版本一致-->
    <httpclient.version>${httpclient45.version}</httpclient.version>
    <im4java.version>1.4.0</im4java.version>
    <!-- imageio-ext-png.version>1.1.17</imageio-ext-png.version -->
    <infinispan.version>9.0.0.Final</infinispan.version>
    <!-- ini4j 0.5.4版本由于变更了对\的处理，会导致安全相关的IT失败. -->
    <ini4j.version>0.5.2</ini4j.version>
    <iobjects-renderengine.version>0.9.3</iobjects-renderengine.version>
    <!--免费的Java报表库-->
    <jasperreports.version>6.12.2</jasperreports.version>
    <j2ssh.version>0.2.9</j2ssh.version>
    <java-websocket.version>1.5.0</java-websocket.version>
    <!-- Starting with 2.7, JDK baseline will be Java 7 / JDK 7 -->
    <jackson.version>2.12.5</jackson.version>
    <jackson.databind.version>${jackson.version}</jackson.databind.version>
    <jackson-annotations.version>${jackson.version}</jackson-annotations.version>
    <jackson-csv.version>${jackson.version}</jackson-csv.version>
    <jasmine.version>${plugin.jasmine.version}</jasmine.version>
    <jasmine-coverage.version>1.5.5</jasmine-coverage.version>
    <jasypt.version>1.9.2</jasypt.version>
    <javax.activation.version>1.1.1</javax.activation.version>
    <javax.media.version>1.1.3</javax.media.version>
    <jax-rs1.version>1.1.1</jax-rs1.version>
    <!-- //TODO: rs-api最新版本为2.1 -->
    <jax-rs2.version>2.1.1</jax-rs2.version>
    <!-- 2.2.8 或以上的版本会导致JAXBToolsTest运行时出现java.lang.NoClassDefFoundError: com/sun/xml/bind/v2/model/annotation/AnnotationReader错误.  -->
    <jaxbimpl.version>2.2.10</jaxbimpl.version>
    <jaxen.version>1.1.6</jaxen.version>
    <jedis.version>3.7.0</jedis.version>
    <jersey.version>1.19.4</jersey.version>
    <!-- //TODO: jersey 2.26+依赖rs-api 2.1版本，我们在用的是2.0。 -->
    <jersey2.version>2.25.1</jersey2.version>
    <jettison.version>1.4.1</jettison.version>
    <!-- jetty93/94 需要 java8 环境 -->
    <jetty94.version>9.4.43.v20210629</jetty94.version>
    <!-- 基于9.4.37.v20210219，supermap做了变更，去除掉了jar中的javax.servlet.ServletContainerInitializer文件
    （会导致tomcat扫描到，执行对应类中的onstartup方法，导致报错），
    还没找到tomcat相关配置可以控制跳过此类的扫描，暂时这么处理，后续找到办法后，需要换回原始的jar -->
    <websocket-server-sm.version>9.4.43.v20210629_sm</websocket-server-sm.version>
    <jetty93.version>9.3.14.v20161028</jetty93.version>
    <jetty9.version>${jetty94.version}</jetty9.version>
    <!-- jetty92 和 jetty8 的API有较大变化，且需要 java 7 环境 -->
    <jetty92.version>9.2.24.v20180105</jetty92.version>
    <!-- Jetty 7 and Jetty 8 are now EOL (End of Life) -->
    <jetty8.version>8.2.0.v20160908</jetty8.version>
    <jetty7.version>7.6.17.v20150415</jetty7.version>
    <jetty6.version>6.1.26</jetty6.version>
    <!-- jetty92只有ServerConnector, 和jetty8不兼容. -->
    <!-- 最终使用时，以jetty.version这个属性的值为准 -->
    <jetty.version>${jetty9.version}</jetty.version>
    <jmagick.version>6.6.9</jmagick.version>
    <jongo.version>0.2</jongo.version>
    <jose4j.version>0.7.9</jose4j.version>
    <jsoup.version>1.14.2</jsoup.version>
    <json-api.version>1.1.2</json-api.version>
    <!-- JSR 374 (JSON Processing) API -->
    <json-lib.version>2.4</json-lib.version>
    <jsonassert.version>1.5.0</jsonassert.version>
    <jstl.version>1.2</jstl.version>
    <jts-old.version>1.13</jts-old.version>
    <!-- 要逐步废弃，改为使用 locationtech-jts包. -->
    <jts-locationtech.version>1.16.0</jts-locationtech.version>
    <junit.version>4.13.2</junit.version>
    <!-- jwebunit 3.3 October 08, 2015 HtmlUnit 2.18, Java 7 -->
    <jwebunit.version>3.3</jwebunit.version>
    <jwt.version>5.10</jwt.version>
    <log4j.version>1.2.17</log4j.version>
    <!-- As of version 2.9.1 Log4j supports Java 9 but will still work in Java 7 or 8 -->
    <logging.log4j.api.version>2.14.1</logging.log4j.api.version>
    <logback.version>1.2.3</logback.version>
    <!--不要使用，logback 和 log4j 只能二选一。 -->
    <!-- lucene 7基于java8 (出处：http://lucene.apache.org/core/7_6_0/SYSTEM_REQUIREMENTS.html)-->
    <!-- es-transport客户端依赖es包，es 6.6.1 在代码里面明确要求使用 lucene 7.6.0 -->
    <lucene.version>7.7.3</lucene.version>
    <!-- latest 7.7.1 -->
    <!--Java-PDF库-->
    <lowagie.version>2.1.7</lowagie.version>
    <!-- mariadb needs Java 7 or 8 (Last compatible version with Java 6 is 1.1.9) -->
    <mariadb-java-client.version>2.7.4</mariadb-java-client.version>
    <!-- memcached unused -->
    <memcached.version>2.12.3</memcached.version>
    <mimepull.version>1.9.15</mimepull.version>
    <!--  Mockito 3.X will target Java 8 -->
    <!-- Mockito does not produce the mockito-all artifact anymore -->
    <!-- https://github.com/mockito/mockito/wiki/What%27s-new-in-Mockito-2 -->
    <mockito2.version>3.12.4</mockito2.version>
    <mockito.version>1.10.19</mockito.version>
    <!-- mongo2-->
    <mongo2>2.12.2</mongo2>
    <mongo3.version>3.6.2</mongo3.version>
    <mongo.version>${mongo3.version}</mongo.version>
    <moco.version>1.2.0</moco.version>
    <!--moco依赖的netty版本，因为在agent模块中有netty版本冲突导致测试失败，故声明依赖的netty版本以解决测试问题-->
    <moco.dependecy.netty.version>4.1.46.Final</moco.dependecy.netty.version>
    <!--mapbox-vector-tile.jar 需要依赖3.0.0版本的protoBuf,但是当前因为3.0.0版本的protoBuf和geomesa有冲突，必须降级到2.6.1,所以对3.0.0版本的mapbox-vector-tile.jar进行修改以适配2.6.1版本的protoBuf，后面升级protoBuf版本后去掉-pb2即可 (3.0.0-pb2-v1)-->
    <!--mapbox-vector-tile.jar 同步官方github的修改（https://github.com/wdtinc/mapbox-vector-tile-java/pull/41/commits）（maven上目前最新的版本还没有包含此修改，判断岛洞的逻辑修改），3.1.0-pb2-v1  -->
    <!--mapbox-vector-tile.jar 修改jar包中linesToGeomCmds方法，之前的逻辑是会去掉首尾相连的线的最后一个点，导致出图缺少了最后一条线段，现把此逻辑去除 ，3.1.0-pb2-v2-->
    <!--mapbox-vector-tile.jar 增加生成mvt方法，区别是去除掉了对geometry的切割（对于有拓扑错误的图形，会生成失败），切割步骤在调用之前进行 ，3.1.0-pb2-v3-->
    <!--mapbox-vector-tile.jar v3的版本并不是最新的，更新到最新，3.1.0-pb2-v4-->
    <mvt.version>3.1.0-pb2-v4</mvt.version>
    <mybatis.version>3.5.7</mybatis.version>
    <mybatis-spring.version>2.0.6</mybatis-spring.version>
    <!-- <mysql-connector.version>5.1.38</mysql-connector.version> -->
    <!-- 不要使用， GPL协议！ -->
    <netty.version>3.10.6.Final</netty.version>
    <dependency.netty.version>4.1.67.Final</dependency.netty.version>
    <nimbusds.version>8.0</nimbusds.version>
    <not-yet-commons-ssl.version>0.3.17</not-yet-commons-ssl.version>
    <nutz.version>1.r.65</nutz.version>
    <!-- 1.1.0 的有问题，会导致重复类型加载。ahnan. -->
    <ogcs.version>1.0.3</ogcs.version>
    <wfs200.version>2.0.0</wfs200.version>
    <!-- shiro-cas 使用1.1，所以这里不更新到2.x版本。 -->
    <!-- 本地测试使用2.6.4版本的opensaml可以使用cas功能,先升级上去 -->
    <opensaml.version>2.6.6</opensaml.version>
    <oshi.version>5.8.1</oshi.version>
    <!-- pac4j 相关依赖 start -->
    <buji-pac4j.version>3.2.0</buji-pac4j.version>
    <openstack4j.version>3.1.0</openstack4j.version>
    <pac4j.version>2.2.1</pac4j.version>
    <!-- pac4j 相关依赖 end -->
    <perf4j.version>0.9.16</perf4j.version>
    <phantomjsdriver.version>1.4.4</phantomjsdriver.version>
    <pngj.version>2.1.0</pngj.version>
    <postgresql.version>42.2.23</postgresql.version>
    <!-- //todo: powermock 1.6.6+ 和 mockito2 兼容，但和 mockito1 不兼容。 latest:1.7.4 -->
    <powermock.version>2.0.9</powermock.version>
    <proguard.version>6.2.2</proguard.version>
    <print-lib-sm.version>[3.23.1,3.23.2)</print-lib-sm.version>
    <quartz.version>2.3.2</quartz.version>
    <quartz-addon.version>2.1.7</quartz-addon.version>
    <rabbitmq.version>5.13.1</rabbitmq.version>
    <!-- randomizedtesting, since 2.2.0 Move to Java 1.7 and use the java NIO 2 API for temp files -->
    <randomizedtesting.version>2.7.8</randomizedtesting.version>
    <rest-assured.version>2.9.0</rest-assured.version>
    <!-- //TODO: You should place rest-assured before the JUnit dependency declaration in your pom.xml / build.gradle in order to make sure that the correct version of Hamcrest is used -->
    <rest-assured3.version>3.1.0</rest-assured3.version>
    <!-- 2.4.0版本存在bug：使用短连接请求restlet资源时，请求的请求体会丢失。2.4.3版本修复 -->
    <restlet.version>2.4.3</restlet.version>
    <scala.version>2.11.12</scala.version>
    <scalatest.version>3.0.5</scalatest.version>
    <!-- Note that all Selenium Java artefacts are built with Java 8 (mandatory). Those will work with any Java >= 8. -->
    <selenium.version>3.12.0</selenium.version>
    <!-- //TODO: shiro 1.4.0 还在使用xmlsec的1.4.3版本 -->
    <shiro.version>1.8.0</shiro.version>
    <shoal.version>1.6.52</shoal.version>
    <sigar.version>1.6.4</sigar.version>
    <simple-xml.version>2.7.1</simple-xml.version>
    <slf4j.version>1.7.32</slf4j.version>
    <smiley-http-proxy-servlet.version>1.9</smiley-http-proxy-servlet.version>
    <spark.version>2.3.2</spark.version>
    <sparkjava.version>2.7.1</sparkjava.version>
    <!-- unused -->
    <!-- geomesa 2.2.0, ElasticSearch 6.6.1 版本的空间查询等，依赖 spatial4j 0.7版本-->
    <spatial4j.version>0.7</spatial4j.version>
    <!-- latesd 0.7 -->
    <spring.version>5.3.9</spring.version>
    <spring-amqp.version>2.3.10</spring-amqp.version>
    <!-- 新版本3.2+，把 spring-asm 已经合并到 core 中了。 -->
    <spring-asm.version>3.1.4.RELEASE</spring-asm.version>
    <spring.security.version>5.0.5.RELEASE</spring.security.version>
    <!-- 为保证sqlite在aix上的可用性，版本必须小于3.7.15-M1 -->
    <!-- 副作用为iServer为了支持AIX版本无法用到3.7.2版本之后的新功能 -->
    <sqlite.version.forAIX>3.7.2</sqlite.version.forAIX>
    <sqlite.version.forlinuxFT1500a>3.7.2</sqlite.version.forlinuxFT1500a>
    <sqlite.version>3.36.0.3</sqlite.version>
    <sql-parser.version>1.0.16</sql-parser.version>
    <ugo.version>[10.2.0,10.3)</ugo.version>
    <!-- 由于com.supermap.license.jar、com.supermap.licensehasp.jar从ugo中分离出来，现单独定义它们的版本 -->
    <license.version>[10.2.0-210818,10.3)</license.version>
    <iobjects.extension.version>10.2.0-SNAPSHOT</iobjects.extension.version>
    <bdt.version>10.2.0-SNAPSHOT</bdt.version>
    <sps.version>10.2.0-SNAPSHOT</sps.version>
    <bslicense.version>[2.0.0,3.0.0)</bslicense.version>
    <bslicense-edu-client>1.0.1</bslicense-edu-client>
    <ugo.platformId/>
    <urlrewritefilter.version>4.0.4</urlrewritefilter.version>
    <vertx.version>3.4.0</vertx.version>
    <vertx1.version>1.3.1.final</vertx1.version>
    <!-- 5.x以后就不开源了，建议用yavijava -->
    <vijava.version>6.0</vijava.version>
    <webjars.version>0.5</webjars.version>
    <weld.version>2.0.2.Final</weld.version>
    <webp-imageio-core.version>[0.1.0,0.1.1)</webp-imageio-core.version>
    <wro4j.version>1.8.0</wro4j.version>
    <xerces.version>2.12.1</xerces.version>
    <!-- http://www.xmlunit.org/ -->
    <!-- //TODO: XMLUnit 2.x is a complete rewrite of XMLUnit and actually doesn't share any code with XMLUnit for Java 1.x. -->
    <xmlunit2.version>2.6.0</xmlunit2.version>
    <xmlunit.version>1.6</xmlunit.version>
    <!-- xstream1.4.10有默认java8版本，也有java7版本 -->
    <xstream.version>1.4.18</xstream.version>
    <xmemcached.version>2.4.2</xmemcached.version>
    <xmlsec.version>2.2.3</xmlsec.version>
    <!--batik SVG转码器，batik SVG dom实现-->
    <xmlgraphics.version>1.14</xmlgraphics.version>
    <!--YAML 1.1java解析器-->
    <yaml.version>1.29</yaml.version>
    <yavijava.version>6.0.05</yavijava.version>
    <!-- zookeeper.version>3.4.14</zookeeper.version -->
    <!-- gt-blockchain区块链geotools版本 -->
    <gt-blockchain.version>11.0.0-SNAPSHOT</gt-blockchain.version>
    <!-- gt-blockchain区块链组件版本 -->
    <com.supermap.blockchain.fabric.version>11.0.0-SNAPSHOT</com.supermap.blockchain.fabric.version>
    <!-- 区块链依赖的sql转mango语句依赖包 -->
    <sql.to.mongo.version>1.10</sql.to.mongo.version>
  </properties>
  <!-- 依赖管理，指定依赖项的版本，子pom中声明依赖时，无须定义依赖版本-->
  <dependencyManagement>
    <!-- 在 ispeco-parent 中包含ibase依赖声明，但不包含原 iserver-pom 中的iserver各模块的版本声明，在 iserver-pom 中声明即可，其他子模块同样处理. -->
    <!-- 依赖排列顺序：先人后己，相关的依赖放到一起并加上注释。尽量按照ga字母顺序排列。test依赖放到后面. -->
    <dependencies>
      <dependency>
        <groupId>com.supermap.bslicense</groupId>
        <artifactId>supermap-bslicense-client</artifactId>
        <version>${bslicense.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.edu</groupId>
        <artifactId>bslicense-edu-client</artifactId>
        <version>${bslicense-edu-client}</version>
      </dependency>
      <dependency>
        <groupId>ar.com.hjg</groupId>
        <artifactId>pngj</artifactId>
        <version>${pngj.version}</version>
      </dependency>
      <dependency>
        <groupId>ar.com.fdvs</groupId>
        <artifactId>DynamicJasper</artifactId>
        <version>${fdvs.version}</version>
        <exclusions>
          <exclusion>
            <groupId>com.lowagie</groupId>
            <artifactId>itext</artifactId>
          </exclusion>
          <exclusion>
            <artifactId>xercesImpl</artifactId>
            <groupId>*</groupId>
          </exclusion>
          <exclusion>
            <artifactId>*</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
          <exclusion>
            <artifactId>jai_core</artifactId>
            <groupId>*</groupId>
          </exclusion>
          <exclusion>
            <artifactId>xmlgraphics-commons</artifactId>
            <groupId>org.apache.xmlgraphics</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <!-- 用于替换之前的benchlab-harlib-1.1.1，那个不在中央仓库中. -->
        <groupId>edu.umass.cs.benchlab</groupId>
        <artifactId>harlib</artifactId>
        <version>1.1.3</version>
      </dependency>
      <dependency>
        <!-- used by gp -->
        <groupId>bexee</groupId>
        <artifactId>bexee</artifactId>
        <version>0.1</version>
      </dependency>
      <dependency>
        <groupId>ca.juliusdavies</groupId>
        <artifactId>not-yet-commons-ssl</artifactId>
        <version>${not-yet-commons-ssl.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.cal10n</groupId>
        <artifactId>cal10n-api</artifactId>
        <version>0.7.7</version>
        <!-- //TODO: upgrade to ${cal10n.version} (0.8.1), As of version 0.8, CAL10N ships with an JSR-269 compliant annotation processor named CAL10NAnnotationProcessor.  The maven-compiler-plugin automatically integrates CAL10NAnnotationProcessor for every dependecy of cal10-api -->
      </dependency>
      <dependency>
        <groupId>com.akiban</groupId>
        <artifactId>akiban-sql-parser</artifactId>
        <version>${sql-parser.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>fastjson</artifactId>
        <version>${fastjson.version}</version>
      </dependency>
      <!-- 短信发送依赖 -->
      <dependency>
        <groupId>com.aliyun</groupId>
        <artifactId>aliyun-java-sdk-core</artifactId>
        <version>${aliyun-core.version}</version>
      </dependency>
      <dependency>
        <groupId>com.aliyun</groupId>
        <artifactId>aliyun-java-sdk-dysmsapi</artifactId>
        <version>${aliyun-dysms.version}</version>
      </dependency>
      <dependency>
        <groupId>com.aliyun.openservices</groupId>
        <artifactId>ots-public</artifactId>
        <version>${aliyun-ots.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.aliyun.oss</groupId>
        <artifactId>aliyun-sdk-oss</artifactId>
        <version>${aliyun-oss.version}</version>
      </dependency>
      <dependency>
        <groupId>com.carrotsearch.randomizedtesting</groupId>
        <artifactId>randomizedtesting-runner</artifactId>
        <version>${randomizedtesting.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.databind.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.dreamhead</groupId>
        <artifactId>moco-core</artifactId>
        <version>${moco.version}</version>
        <exclusions>
          <exclusion>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.github.dreamhead</groupId>
        <artifactId>moco-runner</artifactId>
        <version>${moco.version}</version>
        <exclusions>
          <exclusion>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.github.oshi</groupId>
        <artifactId>oshi-core</artifactId>
        <version>${oshi.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.rholder</groupId>
        <artifactId>guava-retrying</artifactId>
        <version>${guava-retrying.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}-jre</version>
      </dependency>
      <!-- android依赖，请在iclient-android里面自行设置
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}-android</version>
      </dependency>
      -->
      <dependency>
          <groupId>xpp3</groupId>
          <artifactId>xpp3_min</artifactId>
          <version>${xpp3_min.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java</artifactId>
        <version>${protobuf.version}</version>
      </dependency>
      <dependency>
        <groupId>com.hazelcast</groupId>
        <artifactId>hazelcast</artifactId>
        <version>${hazelcast.version}</version>
      </dependency>
      <dependency>
        <groupId>com.hazelcast</groupId>
        <artifactId>hazelcast-client</artifactId>
        <version>${hazelcast.version}</version>
      </dependency>
      <dependency>
        <groupId>com.jayway.jsonpath</groupId>
        <artifactId>json-path</artifactId>
        <version>2.6.0</version>
      </dependency>
      <dependency>
        <groupId>com.jayway.restassured</groupId>
        <artifactId>rest-assured</artifactId>
        <version>${rest-assured.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <!-- //TODO: moved to io.rest-assured (v3) -->
      <dependency>
        <!-- v2.9.0以后迁移到新groupId了-->
        <groupId>com.jayway.restassured</groupId>
        <artifactId>json-path</artifactId>
        <version>${rest-assured.version}</version>
      </dependency>
      <dependency>
        <groupId>com.jayway.restassured</groupId>
        <artifactId>xml-path</artifactId>
        <version>${rest-assured.version}</version>
      </dependency>
      <dependency>
        <groupId>com.lowagie</groupId>
        <artifactId>itext</artifactId>
        <version>${lowagie.version}</version>
        <exclusions>
          <exclusion>
            <groupId>bouncycastle</groupId>
            <artifactId>bcmail-jdk14</artifactId>
          </exclusion>
          <exclusion>
            <groupId>bouncycastle</groupId>
            <artifactId>bcprov-jdk14</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <!-- https://mvnrepository.com/artifact/com.madgag/animated-gif-lib -->
      <dependency>
        <groupId>com.madgag</groupId>
        <artifactId>animated-gif-lib</artifactId>
        <version>1.4</version>
      </dependency>
      <dependency>
        <!-- used by gp -->
        <groupId>com.mchange</groupId>
        <artifactId>c3p0</artifactId>
        <version>${c3p0.version}</version>
      </dependency>
      <dependency>
        <!-- A tiny framework that makes it easy to write Test Data Builders in Java -->
        <groupId>com.natpryce</groupId>
        <artifactId>make-it-easy</artifactId>
        <version>4.0.1</version>
      </dependency>
      <dependency>
        <groupId>com.nimbusds</groupId>
        <artifactId>nimbus-jose-jwt</artifactId>
        <version>${nimbusds.version}</version>
        <exclusions>
          <exclusion>
            <!-- 使用 com.jayway.restassured.json-path 依赖的更高版本的 json-smart-->
            <groupId>net.minidev</groupId>
            <artifactId>json-smart</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <!-- used by webdriver -->
        <groupId>com.opera</groupId>
        <artifactId>operadriver</artifactId>
        <version>1.5</version>
      </dependency>
      <dependency>
        <!-- used by gp，oracle的jar不允许商业分发，应该在最终Release的Pkg中去掉  -->
        <groupId>com.oracle</groupId>
        <artifactId>ojdbc14</artifactId>
        <version>10.2.0.4.0</version>
      </dependency>
      <dependency>
        <groupId>com.rabbitmq</groupId>
        <artifactId>amqp-client</artifactId>
        <version>${rabbitmq.version}</version>
      </dependency>
      <!--jersey, sun的JAX-RS实现框架-->
      <dependency>
        <groupId>com.sun.jersey</groupId>
        <artifactId>jersey-core</artifactId>
        <version>${jersey.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.jersey</groupId>
        <artifactId>jersey-server</artifactId>
        <version>${jersey.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.jersey</groupId>
        <artifactId>jersey-servlet</artifactId>
        <version>${jersey.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.jersey</groupId>
        <artifactId>jersey-client</artifactId>
        <version>${jersey.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-impl</artifactId>
        <version>${jaxbimpl.version}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jsr173_api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.sun.jersey</groupId>
        <artifactId>jersey-bundle</artifactId>
        <version>${jersey.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.jersey.contribs</groupId>
        <artifactId>jersey-multipart</artifactId>
        <version>${jersey.version}</version>
      </dependency>
      <!-- rest-sdk 的依赖, xml 序列化等。 -->
      <dependency>
        <groupId>com.thoughtworks.xstream</groupId>
        <artifactId>xstream</artifactId>
        <version>${xstream.version}</version>
      </dependency>
      <dependency>
        <groupId>com.vividsolutions</groupId>
        <artifactId>jts</artifactId>
        <version>${jts-old.version}</version>
      </dependency>
      <dependency>
        <groupId>com.wdtinc</groupId>
        <artifactId>mapbox-vector-tile</artifactId>
        <version>${mvt.version}</version>
      </dependency>
      <!-- commons -->
      <dependency>
        <groupId>commons-beanutils</groupId>
        <artifactId>commons-beanutils</artifactId>
        <version>${commons-beanutils.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-collections</groupId>
        <artifactId>commons-collections</artifactId>
        <version>${commons-collections.version}</version>
      </dependency>
      <!-- 用于处理命令行的-->
      <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>${commons-cli.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-dbcp</groupId>
        <artifactId>commons-dbcp</artifactId>
        <version>${commons-dbcp.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${commons-codec.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-digester</groupId>
        <artifactId>commons-digester</artifactId>
        <version>${commons-digester.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-fileupload</groupId>
        <artifactId>commons-fileupload</artifactId>
        <version>${commons-fileupload.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>2.6</version>
      </dependency>
      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>${commons-logging.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-net</groupId>
        <artifactId>commons-net</artifactId>
        <version>${commons-net.version}</version>
      </dependency>
      <!-- 原第三方jar是webp-imageio-core,但是在多线程write的时候,传入的byte[]有几率为空，会抛空指针的异常，这里做了修改，在 byte[]为null时重新写入一次 ，新jar包名为sm-webp-imageio-core-->
      <dependency>
        <groupId>com.github.nintha</groupId>
        <artifactId>sm-webp-imageio-core</artifactId>
        <version>${webp-imageio-core.version}</version>
      </dependency>
      <!-- xml -->
      <dependency>
        <groupId>org.dom4j</groupId>
        <artifactId>dom4j</artifactId>
        <version>2.1.3</version>
        <exclusions>
          <exclusion>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <!-- https://github.com/rest-assured/rest-assured/wiki/ReleaseNotes30#upgrading -->
      <!-- Standalone JsonPath (included if you depend on the rest-assured artifact). Makes it easy to parse JSON documents. Note that this JsonPath implementation uses Groovy's GPath syntax and is not to be confused with Jayway's other JsonPath implementation. -->
      <dependency>
        <groupId>io.rest-assured</groupId>
        <artifactId>rest-assured</artifactId>
        <version>${rest-assured3.version}</version>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty</artifactId>
        <version>${netty.version}</version>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-handler</artifactId>
        <version>${dependency.netty.version}</version>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-transport</artifactId>
        <version>${dependency.netty.version}</version>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-codec-http</artifactId>
        <version>${dependency.netty.version}</version>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-codec</artifactId>
        <version>${dependency.netty.version}</version>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-common</artifactId>
        <version>${dependency.netty.version}</version>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-buffer</artifactId>
        <version>${dependency.netty.version}</version>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-resolver</artifactId>
        <version>${dependency.netty.version}</version>
      </dependency>
      <!--
      <dependency>
        <groupId>it.geosolutions.imageio-ext</groupId>
        <artifactId>imageio-ext-png</artifactId>
        <version>${imageio-ext-png.version}</version>
      </dependency>
      -->
      <dependency>
        <groupId>javax.mail</groupId>
        <artifactId>javax.mail-api</artifactId>
        <version>1.6.2</version>
      </dependency>
      <dependency>
        <groupId>com.sun.mail</groupId>
        <artifactId>javax.mail</artifactId>
        <version>1.6.2</version>
      </dependency>
      <!-- servlet 3.1 & jsp 2.3 -->
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>3.1.0</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>javax.servlet.jsp</groupId>
        <artifactId>javax.servlet.jsp-api</artifactId>
        <version>2.3.1</version>
        <scope>provided</scope>
      </dependency>
      <!-- servlet 2.5 & jsp 2.1 -->
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>servlet-api</artifactId>
        <version>2.5</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>javax.servlet.jsp</groupId>
        <artifactId>jsp-api</artifactId>
        <version>2.1</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <!-- the official spec jar for the JAX-RS 1.x line -->
        <groupId>javax.ws.rs</groupId>
        <artifactId>jsr311-api</artifactId>
        <version>${jax-rs1.version}</version>
      </dependency>
      <dependency>
        <!--  the official spec jar for the JAX-RS 2.x line. -->
        <groupId>javax.ws.rs</groupId>
        <artifactId>javax.ws.rs-api</artifactId>
        <version>${jax-rs2.version}</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
      </dependency>
      <!-- The artifact junit:junit does not contain Hamcrest anymore but declares a dependency to Hamcrest. Thus, junit:junit-dep has become obsolete. -->
      <!--dependency>
        <groupId>junit</groupId>
        <artifactId>junit-dep</artifactId>
        <version>${junit.version}</version>
      </dependency-->
      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>${log4j.version}</version>
      </dependency>
      <dependency>
        <!-- used for test and for org.restlet.jee:org.restlet.ext.httpclient by services-rest-sdk -->
        <groupId>net.jcip</groupId>
        <artifactId>jcip-annotations</artifactId>
        <version>1.0</version>
      </dependency>
      <dependency>
        <groupId>net.sf.jasperreports</groupId>
        <artifactId>jasperreports</artifactId>
        <version>${jasperreports.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>xercesImpl</artifactId>
            <groupId>*</groupId>
          </exclusion>
          <exclusion>
            <artifactId>*</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
          <exclusion>
            <artifactId>jai_core</artifactId>
            <groupId>*</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>net.sf.jasperreports</groupId>
        <artifactId>jasperreports-fonts</artifactId>
        <version>${jasperreports.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>xercesImpl</artifactId>
            <groupId>*</groupId>
          </exclusion>
          <exclusion>
            <artifactId>*</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
          <exclusion>
            <artifactId>jai_core</artifactId>
            <groupId>*</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>net.sf.jasperreports</groupId>
        <artifactId>jasperreports-functions</artifactId>
        <version>${jasperreports.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>xercesImpl</artifactId>
            <groupId>*</groupId>
          </exclusion>
          <exclusion>
            <artifactId>*</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
          <exclusion>
            <artifactId>jai_core</artifactId>
            <groupId>*</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <!-- cache -->
      <dependency>
        <groupId>com.github.ben-manes.caffeine</groupId>
        <artifactId>caffeine</artifactId>
        <version>${caffeine.version}</version>
      </dependency>
      <dependency>
        <groupId>net.sf.ehcache</groupId>
        <artifactId>ehcache</artifactId>
        <version>${ehcache.version}</version>
      </dependency>
      <dependency>
        <groupId>net.sf.ehcache</groupId>
        <artifactId>ehcache-debugger</artifactId>
        <version>${ehcache.debugger.version}</version>
      </dependency>
      <dependency>
        <groupId>net.sf.ezmorph</groupId>
        <artifactId>ezmorph</artifactId>
        <version>${ezmorph.version}</version>
      </dependency>
      <dependency>
        <groupId>net.sf.json-lib</groupId>
        <artifactId>json-lib</artifactId>
        <version>${json-lib.version}</version>
        <classifier>jdk15</classifier>
      </dependency>
      <dependency>
        <groupId>net.sourceforge.jwebunit</groupId>
        <artifactId>jwebunit-htmlunit-plugin</artifactId>
        <version>${jwebunit.version}</version>
        <exclusions>
          <exclusion>
            <!-- we're using log4j/slf4j. -->
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
          </exclusion>
          <exclusion>
            <!-- it's using servlet 2.5, we're using servlet 3.0.1 version. -->
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
          </exclusion>
          <exclusion>
            <!-- it's using junit-dep, oh shit. -->
            <groupId>junit</groupId>
            <artifactId>junit-dep</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <!-- Online限时许可的有一部分对接企管webservice的功能代码用到了两个第三方依赖 -->
        <groupId>org.apache.axis2</groupId>
        <artifactId>axis2-java2wsdl</artifactId>
        <version>${axis2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.axis2</groupId>
        <artifactId>axis2-adb</artifactId>
        <version>${axis2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hbase</groupId>
        <artifactId>hbase-client</artifactId>
        <version>${hbase.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
          </exclusion>
          <exclusion>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
          </exclusion>
          <exclusion>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.github.stephenc.findbugs</groupId>
            <artifactId>findbugs-annotations</artifactId>
          </exclusion>
          <exclusion>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
          </exclusion>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
          </exclusion>
          <exclusion>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
          </exclusion>
          <exclusion>
            <groupId>io.netty</groupId>
            <artifactId>netty</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-annotations</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-util</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.hbase</groupId>
        <artifactId>hbase-server</artifactId>
        <version>${hbase.version}</version>
        <exclusions>
          <exclusion>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
          </exclusion>
          <exclusion>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-util</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-sslengine</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>servlet-api-2.5</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.hbase</groupId>
        <artifactId>hbase-hadoop-compat</artifactId>
        <version>${hbase.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-collections4</artifactId>
        <version>${commons-collections4.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>${commons-compress.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-pool2</artifactId>
        <version>${commons-pool2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-email</artifactId>
        <version>${commons-email.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-text</artifactId>
        <version>${commons-text.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.directory.api</groupId>
        <artifactId>api-util</artifactId>
        <version>${api-util.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-client</artifactId>
        <version>${hadoop.version}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.ws.rs</groupId>
            <artifactId>jsr311-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-common</artifactId>
        <exclusions>
          <exclusion>
            <!-- 使用 com.jayway.restassured.json-path 依赖的更高版本的 json-smart-->
            <artifactId>json-smart</artifactId>
            <groupId>net.minidev</groupId>
          </exclusion>
          <exclusion>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
          </exclusion>
          <exclusion>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
          </exclusion>
        </exclusions>
        <version>${hadoop.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-hdfs</artifactId>
        <exclusions>
          <exclusion>
            <groupId>io.netty</groupId>
            <artifactId>netty</artifactId>
          </exclusion>
          <exclusion>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
          </exclusion>
          <exclusion>
            <!--already exists in the jdk -->
            <groupId>xerces</groupId>
            <artifactId>xercesImpl</artifactId>
          </exclusion>
          <exclusion>
            <!-- already exists in the jdk -->
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
          </exclusion>
        </exclusions>
        <version>${hadoop.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-mapreduce-client-core</artifactId>
        <version>${hadoop3.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>fluent-hc</artifactId>
        <version>${httpclient.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>${httpclient.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpmime</artifactId>
        <version>${httpclient.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpasyncclient</artifactId>
        <version>${httpasyncclient.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpcore</artifactId>
        <version>${httpcore.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpcore-nio</artifactId>
        <version>${httpcore.version}</version>
      </dependency>
      <dependency>
        <!-- 依赖log4j-api，并且声明为provided，所以不加这个依赖就用不起来
        org.elasticsearch.client:transport ==> org.elasticsearch:elasticsearch ==> org.apache.logging.log4j:log4j-api -->
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-api</artifactId>
        <version>${logging.log4j.api.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi-ooxml</artifactId>
        <version>${apache-poi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi</artifactId>
        <version>${apache-poi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi-ooxml-schemas</artifactId>
        <version>${apache-poi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.santuario</groupId>
        <artifactId>xmlsec</artifactId>
        <version>${xmlsec.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.shiro</groupId>
        <artifactId>shiro-cas</artifactId>
        <version>${shiro.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.shiro</groupId>
        <artifactId>shiro-core</artifactId>
        <version>${shiro.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.shiro</groupId>
        <artifactId>shiro-web</artifactId>
        <version>${shiro.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-core_2.11</artifactId>
        <version>${spark.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-launcher_2.11</artifactId>
        <version>${spark.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-sql_2.11</artifactId>
        <version>${spark.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-streaming_2.11</artifactId>
        <version>${spark.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-catalyst_2.11</artifactId>
        <version>${spark.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-sketch_2.11</artifactId>
        <version>${spark.version}</version>
      </dependency>
      <dependency>
        <!-- org.elasticsearch.client:transport 依赖于lucene，版本不一致可能导致冲突-->
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-core</artifactId>
        <version>${lucene.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-analyzers-common</artifactId>
        <version>${lucene.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-queryparser</artifactId>
        <version>${lucene.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-transcoder</artifactId>
        <version>${xmlgraphics.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>xercesImpl</artifactId>
            <groupId>*</groupId>
          </exclusion>
          <exclusion>
            <artifactId>*</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
          <exclusion>
            <artifactId>jai_core</artifactId>
            <groupId>*</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-svg-dom</artifactId>
        <version>${xmlgraphics.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>xercesImpl</artifactId>
            <groupId>*</groupId>
          </exclusion>
          <exclusion>
            <artifactId>*</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
          <exclusion>
            <artifactId>jai_core</artifactId>
            <groupId>*</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <!--解析base64编码-->
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-codec</artifactId>
        <version>${xmlgraphics.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>xercesImpl</artifactId>
            <groupId>*</groupId>
          </exclusion>
          <exclusion>
            <artifactId>*</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
          <exclusion>
            <artifactId>jai_core</artifactId>
            <groupId>*</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-bridge</artifactId>
        <version>${xmlgraphics.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>xercesImpl</artifactId>
            <groupId>*</groupId>
          </exclusion>
          <exclusion>
            <artifactId>*</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
          <exclusion>
            <artifactId>jai_core</artifactId>
            <groupId>*</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-css</artifactId>
        <version>${xmlgraphics.version}</version>
      </dependency>
      <!--dependency>
        <groupId>org.apache.zookeeper</groupId>
        <artifactId>zookeeper</artifactId>
        <version>${zookeeper.version}</version>
      </dependency -->
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bitbucket.b_c</groupId>
        <artifactId>jose4j</artifactId>
        <version>${jose4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcpkix-jdk15on</artifactId>
        <version>${bouncycastle.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcprov-jdk15on</artifactId>
        <version>${bouncycastle.version}</version>
      </dependency>
      <dependency>
        <groupId>org.locationtech.geomesa</groupId>
        <artifactId>geomesa-hbase-datastore_2.11</artifactId>
        <version>${geomesa.version}</version>
      </dependency>
      <dependency>
        <groupId>org.locationtech.geomesa</groupId>
        <artifactId>geomesa-spark-core_2.11</artifactId>
        <version>${geomesa.version}</version>
      </dependency>
      <dependency>
        <groupId>org.locationtech.geomesa</groupId>
        <artifactId>geomesa-process-vector_2.11</artifactId>
        <version>${geomesa.version}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.media</groupId>
            <artifactId>jai_codec</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <!-- 从geotrellis-hbase拆分 支持geotrellis+spark 使用 hbase存储-->
        <groupId>org.locationtech.geotrellis</groupId>
        <artifactId>geotrellis-hbase-spark_2.11</artifactId>
        <version>${geotrellis.sm.version}</version>
      </dependency>
      <dependency>
        <!-- used by provider-geotrellis hbase中存储的栅格数据发布地图-->
        <groupId>org.locationtech.geotrellis</groupId>
        <artifactId>geotrellis-hbase_2.11</artifactId>
        <version>${geotrellis.sm.version}</version>
        <exclusions>
          <exclusion>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.locationtech.geotrellis</groupId>
        <artifactId>geotrellis-raster_2.11</artifactId>
        <version>${geotrellis.version}</version>
      </dependency>
      <dependency>
        <!-- geotrellis.spark.io 拆分出store -->
        <groupId>org.locationtech.geotrellis</groupId>
        <artifactId>geotrellis-store_2.11</artifactId>
        <version>${geotrellis.version}</version>
      </dependency>
      <dependency>
        <groupId>org.locationtech.jts</groupId>
        <artifactId>jts-core</artifactId>
        <version>${jts-locationtech.version}</version>
      </dependency>
      <dependency>
        <groupId>org.locationtech.spatial4j</groupId>
        <artifactId>spatial4j</artifactId>
        <version>${spatial4j.version}</version>
      </dependency>
      <dependency>
        <!-- used by iserver2-handler -->
        <groupId>org.codehaus.jettison</groupId>
        <artifactId>jettison</artifactId>
        <version>${jettison.version}</version>
        <exclusions>
          <exclusion>
            <groupId>stax</groupId>
            <artifactId>stax-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.csource</groupId>
        <artifactId>fastdfs-client</artifactId>
        <version>1.24</version>
      </dependency>
      <dependency>
        <groupId>org.csource</groupId>
        <artifactId>fastdht-client</artifactId>
        <version>1.05</version>
      </dependency>
      <dependency>
        <groupId>org.fusesource</groupId>
        <artifactId>sigar</artifactId>
        <version>${sigar.version}</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.jackson</groupId>
        <artifactId>jackson-mapper-asl</artifactId>
        <version>${codehaus.jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.jackson</groupId>
        <artifactId>jackson-core-asl</artifactId>
        <version>${codehaus.jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapfish.print</groupId>
        <artifactId>print-lib-sm</artifactId>
        <version>${print-lib-sm.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>*</artifactId>
            <groupId>*</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <!-- jetty -->
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-annotations</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-deploy</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-http</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-io</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <!-- 从 jetty9.2 开始，不再使用jetty-jsp而应使用apache-jsp -->
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>apache-jsp</artifactId>
        <version>${jetty9.version}</version>
      </dependency>
      <dependency>
        <!-- http://www.eclipse.org/jetty/documentation/current/proxy-servlet.html -->
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-proxy</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-servlets</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-util</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <!-- 只到v8.2版本, 新版本有单独的groupId -->
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-websocket</artifactId>
        <version>${jetty8.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty.websocket</groupId>
        <artifactId>websocket-server</artifactId>
        <version>${websocket-server-sm.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty.websocket</groupId>
        <artifactId>websocket-client</artifactId>
        <version>${jetty9.version}</version>
      </dependency>
      <dependency>
        <groupId>org.elasticsearch</groupId>
        <artifactId>elasticsearch</artifactId>
        <version>${elasticsearch.version}</version>
      </dependency>
      <dependency>
        <groupId>org.elasticsearch</groupId>
        <artifactId>elasticsearch-x-content</artifactId>
        <version>${elasticsearch.version}</version>
      </dependency>
      <dependency>
        <!-- 依赖于lucene -->
        <groupId>org.elasticsearch.client</groupId>
        <artifactId>transport</artifactId>
        <version>${elasticsearch-client.version}</version>
      </dependency>
      <dependency>
        <groupId>org.freemarker</groupId>
        <artifactId>freemarker</artifactId>
        <version>${freemarker.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-opengis</artifactId>
        <version>${geotools.version}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.media</groupId>
            <artifactId>jai_core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-referencing</artifactId>
        <version>${geotools.version}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.media</groupId>
            <artifactId>jai_core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-metadata</artifactId>
        <version>${geotools.version}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.media</groupId>
            <artifactId>jai_core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-epsg-wkt</artifactId>
        <version>${geotools.version}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.media</groupId>
            <artifactId>jai_core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-geopkg</artifactId>
        <version>${geotools.version}</version>
        <exclusions>
          <exclusion>
            <!-- 和jre自带的xml api在运行proguard时有冲突 -->
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.media</groupId>
            <artifactId>jai_core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.media</groupId>
            <artifactId>jai_imageio</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.media</groupId>
            <artifactId>jai_codec</artifactId>
          </exclusion>
          <exclusion>
            <groupId>it.geosolutions.imageio-ext</groupId>
            <artifactId>imageio-ext-tiff</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-cql</artifactId>
        <version>${geotools.version}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.media</groupId>
            <artifactId>jai_core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-epsg-hsql</artifactId>
        <version>${geotools.version}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.media</groupId>
            <artifactId>jai_core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-epsg-extension</artifactId>
        <version>${geotools.version}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.media</groupId>
            <artifactId>jai_core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-mbstyle</artifactId>
        <version>${geotools.version}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.media</groupId>
            <artifactId>jai_core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-process-feature</artifactId>
        <exclusions>
          <exclusion>
            <groupId>javax.media</groupId>
            <artifactId>jai_core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.media</groupId>
            <artifactId>jai_imageio</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.media</groupId>
            <artifactId>jai_codec</artifactId>
          </exclusion>
          <exclusion>
            <groupId>it.geosolutions.imageio-ext</groupId>
            <artifactId>imageio-ext-tiff</artifactId>
          </exclusion>
        </exclusions>
        <version>${geotools.version}</version>
      </dependency>
      <!-- 去除了对jai_core.jar的依赖 -->
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>gt-render-ext</artifactId>
        <version>${geotools.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-render</artifactId>
        <version>${geotools.version}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.media</groupId>
            <artifactId>jai_core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.media</groupId>
            <artifactId>jai_imageio</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.media</groupId>
            <artifactId>jai_codec</artifactId>
          </exclusion>
          <exclusion>
            <groupId>it.geosolutions.imageio-ext</groupId>
            <artifactId>imageio-ext-tiff</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-shapefile</artifactId>
        <version>${geotools.version}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.media</groupId>
            <artifactId>jai_core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-wfs</artifactId>
        <version>${gt.wfs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools.jdbc</groupId>
        <artifactId>gt-jdbc-postgis</artifactId>
        <version>${geotools.version}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.media</groupId>
            <artifactId>jai_core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-geojson</artifactId>
        <version>${geotools.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>xercesImpl</artifactId>
            <groupId>*</groupId>
          </exclusion>
          <exclusion>
            <artifactId>*</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
          <exclusion>
            <artifactId>jai_core</artifactId>
            <groupId>*</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-wms</artifactId>
        <version>${geotools.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>xercesImpl</artifactId>
            <groupId>*</groupId>
          </exclusion>
          <exclusion>
            <artifactId>*</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
          <exclusion>
            <artifactId>jai_core</artifactId>
            <groupId>*</groupId>
          </exclusion>
          <exclusion>
            <artifactId>imageio-ext-tiff</artifactId>
            <groupId>it.geosolutions.imageio-ext</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-xml</artifactId>
        <version>${geotools.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>xercesImpl</artifactId>
            <groupId>*</groupId>
          </exclusion>
          <exclusion>
            <artifactId>*</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
          <exclusion>
            <artifactId>jai_core</artifactId>
            <groupId>*</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-svg</artifactId>
        <version>${geotools.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>xercesImpl</artifactId>
            <groupId>*</groupId>
          </exclusion>
          <exclusion>
            <artifactId>*</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
          <exclusion>
            <artifactId>jai_core</artifactId>
            <groupId>*</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgresql.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.grizzly</groupId>
        <artifactId>grizzly-http-server</artifactId>
        <version>${grizzly2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.gridkit.lab</groupId>
        <artifactId>sigar-lib</artifactId>
        <version>${sigar.version}</version>
      </dependency>
      <!-- jersey2 icm中有用到jersey2，so打开（与jersey1.x的groupId不同，so不会冲突）-->
      <dependency>
        <groupId>org.glassfish.jersey.core</groupId>
        <artifactId>jersey-client</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.core</groupId>
        <artifactId>jersey-common</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.core</groupId>
        <artifactId>jersey-server</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.connectors</groupId>
        <artifactId>jersey-apache-connector</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.connectors</groupId>
        <artifactId>jersey-grizzly-connector</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.containers</groupId>
        <!-- if your container implements Servlet API older than 3.0, use "jersey-container-servlet-core" -->
        <artifactId>jersey-container-servlet</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.containers</groupId>
        <!--  if your container implements Servlet API older than 3.0, use "jersey-container-servlet-core" -->
        <artifactId>jersey-container-servlet-core</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.containers</groupId>
        <artifactId>jersey-container-grizzly2-http</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.containers</groupId>
        <artifactId>jersey-container-grizzly2-servlet</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.containers</groupId>
        <artifactId>jersey-container-jdk-http</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.containers</groupId>
        <artifactId>jersey-container-simple-http</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.media</groupId>
        <artifactId>jersey-media-json-jackson</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.media</groupId>
        <artifactId>jersey-media-json-jettison</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.media</groupId>
        <artifactId>jersey-media-json-processing</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.media</groupId>
        <artifactId>jersey-media-moxy</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.media</groupId>
        <artifactId>jersey-media-multipart</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.media</groupId>
        <artifactId>jersey-media-sse</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.ext</groupId>
        <artifactId>jersey-bean-validation</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.ext</groupId>
        <artifactId>jersey-mvc</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.ext</groupId>
        <artifactId>jersey-mvc-freemarker</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.ext</groupId>
        <artifactId>jersey-mvc-jsp</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.ext</groupId>
        <artifactId>jersey-proxy-client</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.ext</groupId>
        <artifactId>jersey-servlet-portability</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.ext</groupId>
        <artifactId>jersey-wadl-doclet</artifactId>
        <version>${jersey2.version}</version>
      </dependency>
      <!-- jersey2 依赖的一些包在中央仓库中没有对应版本，这里指定已有版本。-->
      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>javax.annotation-api</artifactId>
        <version>1.3.2</version>
      </dependency>
      <!-- end of jersey2 -->
      <!--as you can see in the "Maven-Versions" section, please just use hamcrest-integration instead.-->
      <!--dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-all</artifactId>
        <version>${hamcrest.version}</version>
      </dependency-->
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-integration</artifactId>
        <version>${hamcrest.version}</version>
      </dependency>
      <dependency>
        <groupId>org.ini4j</groupId>
        <artifactId>ini4j</artifactId>
        <version>${ini4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.im4java</groupId>
        <artifactId>im4java</artifactId>
        <version>${im4java.version}</version>
      </dependency>
      <!-- openJDK11 -->
      <dependency>
        <groupId>javax.activation</groupId>
        <artifactId>activation</artifactId>
        <version>${javax.activation.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.media</groupId>
        <artifactId>jai_core</artifactId>
        <version>${javax.media.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>${jaxbimpl.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-core</artifactId>
        <version>${jaxbimpl.version}</version>
      </dependency>
      <!-- org.restlet.ext.json v223依赖了org.restlet.lib.org.json，该lib.org.json和org.json:json内容完全一致。但json库在持续更新维护,且众多三方库都在使用它。 -->
      <dependency>
        <groupId>org.json</groupId>
        <artifactId>json</artifactId>
        <version>20200518</version>
      </dependency>
      <dependency>
        <groupId>org.jasig.cas.client</groupId>
        <artifactId>cas-client-core</artifactId>
        <version>${cas-client.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jasig.cas.client</groupId>
        <artifactId>cas-client-support-saml</artifactId>
        <version>${cas-client.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jsoup</groupId>
        <artifactId>jsoup</artifactId>
        <version>${jsoup.version}</version>
      </dependency>
      <!-- ogc-jvnet -->
      <dependency>
        <groupId>org.jvnet.ogc</groupId>
        <artifactId>csw-v_2_0_2-schema</artifactId>
        <version>${ogcs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jvnet.ogc</groupId>
        <artifactId>filter-v_1_0_0-schema</artifactId>
        <version>${ogcs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jvnet.ogc</groupId>
        <artifactId>gml-v_3_2_1-schema</artifactId>
        <version>${ogcs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jvnet.ogc</groupId>
        <artifactId>ows-v_1_1_0-schema</artifactId>
        <version>${ogcs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jvnet.ogc</groupId>
        <artifactId>sld-v_1_0_0-schema</artifactId>
        <version>${ogcs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jvnet.ogc</groupId>
        <artifactId>sld-v_1_1_0-schema</artifactId>
        <version>${ogcs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jvnet.ogc</groupId>
        <artifactId>wps-v_1_0_0-schema</artifactId>
        <version>${ogcs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jvnet.jaxb2_commons</groupId>
        <artifactId>jaxb2-basics-runtime</artifactId>
        <version>0.6.4</version>
      </dependency>
      <dependency>
        <groupId>org.jvnet.ogc</groupId>
        <artifactId>wfs-v_2_0</artifactId>
        <version>${wfs200.version}</version>
      </dependency>
      <!-- end of ogc-jvnet -->
      <dependency>
        <groupId>org.jvnet.mimepull</groupId>
        <artifactId>mimepull</artifactId>
        <version>${mimepull.version}</version>
      </dependency>
      <dependency>
        <!-- for mysql,mysql-connector-java是GPL协议，不允许商用分发 -->
        <groupId>org.mariadb.jdbc</groupId>
        <artifactId>mariadb-java-client</artifactId>
        <version>${mariadb-java-client.version}</version>
      </dependency>
      <dependency>
        <!-- https://github.com/mitre/HTTP-Proxy-Servlet -->
        <groupId>org.mitre.dsmiley.httpproxy</groupId>
        <artifactId>smiley-http-proxy-servlet</artifactId>
        <version>${smiley-http-proxy-servlet.version}</version>
      </dependency>
      <!-- Mockito does not produce the mockito-all artifact anymore -->
      <!-- https://github.com/mockito/mockito/wiki/What%27s-new-in-Mockito-2 -->
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-all</artifactId>
        <version>${mockito.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito2.version}</version>
        <!-- <exclusions>
          <exclusion>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.objenesis</groupId>
            <artifactId>objenesis</artifactId>
          </exclusion>
        </exclusions> -->
      </dependency>
      <dependency>
        <groupId>org.mongodb</groupId>
        <artifactId>mongo-java-driver</artifactId>
        <version>${mongo.version}</version>
      </dependency>
      <!-- jetty6 -->
      <dependency>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty</artifactId>
        <version>${jetty6.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-util</artifactId>
        <version>${jetty6.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jsp-2.1-jetty</artifactId>
        <version>${jetty6.version}</version>
      </dependency>
      <!-- mybatis -->
      <dependency>
        <groupId>org.mybatis</groupId>
        <artifactId>mybatis</artifactId>
        <version>${mybatis.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mybatis</groupId>
        <artifactId>mybatis-spring</artifactId>
        <version>${mybatis-spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opensaml</groupId>
        <artifactId>opensaml</artifactId>
        <version>${opensaml.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.owasp.antisamy</groupId>
        <artifactId>antisamy</artifactId>
        <version>${antisamy.version}</version>
      </dependency>
      <dependency>
        <groupId>org.owasp.esapi</groupId>
        <artifactId>esapi</artifactId>
        <version>${esapi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-junit4</artifactId>
        <version>${powermock.version}</version>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-junit4-rule-agent</artifactId>
        <version>${powermock.version}</version>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-api-mockito2</artifactId>
        <version>${powermock.version}</version>
      </dependency>
      <dependency>
        <groupId>org.quartz-scheduler</groupId>
        <artifactId>quartz</artifactId>
        <version>${quartz.version}</version>
        <exclusions>
          <!-- upgraded to com.mchange:c3p0 -->
          <exclusion>
            <groupId>c3p0</groupId>
            <artifactId>c3p0</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.quartz-scheduler</groupId>
        <artifactId>quartz-oracle</artifactId>
        <version>${quartz-addon.version}</version>
      </dependency>
      <!-- restlet -->
      <dependency>
        <groupId>org.restlet.jee</groupId>
        <artifactId>org.restlet</artifactId>
        <version>${restlet.version}</version>
      </dependency>
      <dependency>
        <groupId>org.restlet.jee</groupId>
        <artifactId>org.restlet.ext.httpclient</artifactId>
        <version>${restlet.version}</version>
      </dependency>
      <dependency>
        <groupId>org.restlet.jee</groupId>
        <artifactId>org.restlet.ext.json</artifactId>
        <version>${restlet.version}</version>
        <exclusions>
          <!-- upgraded to org.json:json directly -->
          <exclusion>
            <groupId>org.restlet.jee</groupId>
            <artifactId>org.restlet.lib.org.json</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <!--
      <dependency>
        <groupId>org.restlet.jee</groupId>
        <artifactId>org.restlet.lib.org.json</artifactId>
        <version>2.0</version>
      </dependency>
      -->
      <dependency>
        <groupId>org.restlet.jee</groupId>
        <artifactId>org.restlet.ext.freemarker</artifactId>
        <version>${restlet.version}</version>
      </dependency>
      <dependency>
        <groupId>org.restlet.jee</groupId>
        <artifactId>org.restlet.ext.servlet</artifactId>
        <version>${restlet.version}</version>
      </dependency>
      <dependency>
        <groupId>org.restlet.jee</groupId>
        <artifactId>org.restlet.ext.xml</artifactId>
        <version>${restlet.version}</version>
      </dependency>
      <dependency>
       <!--provider-geotrellis,scala test -->
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest_2.11</artifactId>
        <version>${scalatest.version}</version>
      </dependency>
       <!--provider-geotrellis,provider-geomesa -->
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-compiler</artifactId>
        <version>${scala.version}</version>
      </dependency>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-library</artifactId>
        <version>${scala.version}</version>
      </dependency>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-reflect</artifactId>
        <version>${scala.version}</version>
      </dependency>
      <!-- selenium 及其相关 driver. -->
      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-java</artifactId>
        <version>${selenium.version}</version>
      </dependency>
      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-server</artifactId>
        <version>${selenium.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>servlet-api-2.5</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-support</artifactId>
        <version>${selenium.version}</version>
      </dependency>
      <dependency>
        <!-- Starting with 2.53.0 you need to explicitly include HtmlUnitDriver as a dependency to include it. Version number of the driver is now
      tracking HtmlUnit itself. -->
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>htmlunit-driver</artifactId>
        <version>2.27</version>
      </dependency>
      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-remote-driver</artifactId>
        <version>${selenium.version}</version>
      </dependency>
      <dependency>
        <groupId>com.janeluo</groupId>
        <artifactId>ikanalyzer</artifactId>
        <version>2012_u6</version>
      </dependency>
      <!-- 中央仓库中并不存在，换用上面那个 -->
      <!--
      <dependency>
        <groupId>org.wltea</groupId>
        <artifactId>IKAnalyzer</artifactId>
        <version>2012</version>
      </dependency>
      -->
      <dependency>
        <groupId>com.machinepublishers</groupId>
        <artifactId>jbrowserdriver</artifactId>
        <version>0.17.8</version>
      </dependency>
      <!-- pac4j 相关依赖 start -->
      <dependency>
        <groupId>io.buji</groupId>
        <artifactId>buji-pac4j</artifactId>
        <version>${buji-pac4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.pac4j</groupId>
        <artifactId>pac4j-cas</artifactId>
        <version>${pac4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.pac4j</groupId>
        <artifactId>pac4j-oidc</artifactId>
        <version>${pac4j.version}</version>
        <exclusions>
          <exclusion>
            <!-- com.jayway.restassured.json-path 依赖了更高版本的 json-smart(2.3)，而此处依赖的是(1.3.1) -->
            <groupId>net.minidev</groupId>
            <artifactId>json-smart</artifactId>
          </exclusion>
          <exclusion>
            <!-- 使用更高版本的mail，而此处依赖的是(1.4.7) -->
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <!-- pac4j 相关依赖 end -->
      <dependency>
        <groupId>com.codeborne</groupId>
        <artifactId>phantomjsdriver</artifactId>
        <version>${phantomjsdriver.version}</version>
      </dependency>
      <dependency>
        <groupId>org.skyscreamer</groupId>
        <artifactId>jsonassert</artifactId>
        <version>${jsonassert.version}</version>
      </dependency>
      <!-- logging -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-ext</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <!-- 需要在一个具体的项目模块中运行mvn test -Psonar才会用到 -->
        <groupId>org.sonarsource.java</groupId>
        <artifactId>sonar-jacoco-listeners</artifactId>
        <version>4.12.0.11033</version>
      </dependency>
      <!-- spring -->
      <dependency>
        <groupId>org.springframework.amqp</groupId>
        <artifactId>spring-rabbit</artifactId>
        <version>${spring-amqp.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.amqp</groupId>
        <artifactId>spring-amqp</artifactId>
        <version>${spring-amqp.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context-support</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-messaging</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-orm</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!--spring-web 提供了核心HTTP的集成，包括servlet 过滤器，Spring HTTP调用。iserver-webprinting模块中使用其进行spring bean装载。-->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>xercesImpl</artifactId>
            <groupId>*</groupId>
          </exclusion>
          <exclusion>
            <artifactId>*</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
          <exclusion>
            <artifactId>jai_core</artifactId>
            <groupId>*</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.tuckey</groupId>
        <artifactId>urlrewritefilter</artifactId>
        <version>${urlrewritefilter.version}</version>
      </dependency>
      <dependency>
        <groupId>org.vert-x</groupId>
        <artifactId>vertx-core</artifactId>
        <version>${vertx1.version}</version>
      </dependency>
      <dependency>
        <groupId>org.vert-x</groupId>
        <artifactId>vertx-platform</artifactId>
        <version>${vertx1.version}</version>
      </dependency>
      <dependency>
        <groupId>org.vert-x</groupId>
        <artifactId>vertx-lang-java</artifactId>
        <version>${vertx1.version}</version>
      </dependency>
      <dependency>
        <groupId>org.xerial</groupId>
        <artifactId>sqlite-jdbc</artifactId>
        <version>${sqlite.version}</version>
      </dependency>
      <dependency>
        <groupId>org.xmlunit</groupId>
        <artifactId>xmlunit-core</artifactId>
        <version>${xmlunit2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>${yaml.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>xercesImpl</artifactId>
            <groupId>*</groupId>
          </exclusion>
          <exclusion>
            <artifactId>*</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
          <exclusion>
            <artifactId>jai_core</artifactId>
            <groupId>*</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>redis.clients</groupId>
        <artifactId>jedis</artifactId>
        <version>${jedis.version}</version>
      </dependency>
      <dependency>
        <!-- used by gp -->
        <groupId>wsdl4j</groupId>
        <artifactId>wsdl4j</artifactId>
        <version>1.6.3</version>
      </dependency>
      <dependency>
        <groupId>xmlunit</groupId>
        <artifactId>xmlunit</artifactId>
        <version>${xmlunit.version}</version>
      </dependency>
      <!-- jdk6 已内置xalan、xercesImpl所包含的相关功能，所以各个模块不要使用下述这几个依赖。 -->
      <!-- 如果要对插件所用到的依赖的版本进行自定义，可以在本pom的pluginManagement节中进行版本的声明设置。 cobertura203 所依赖的 xalan, xercesImpl 版本较老，和jdk6不兼容，因此这里声明可兼容的版本。  -->
      <dependency>
        <groupId>xalan</groupId>
        <artifactId>xalan</artifactId>
        <version>2.7.2</version>
      </dependency>
      <dependency>
        <groupId>xerces</groupId>
        <artifactId>xercesImpl</artifactId>
        <version>${xerces.version}</version>
      </dependency>
      <!-- icm usage -->
      <dependency>
        <groupId>com.github.cverges.expect4j</groupId>
        <artifactId>expect4j</artifactId>
        <version>${expect4j.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.docker-java</groupId>
        <artifactId>docker-java</artifactId>
        <version>${docker-java.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${gson.version}</version>
      </dependency>
      <dependency>
        <groupId>org.pacesys</groupId>
        <artifactId>openstack4j-core</artifactId>
        <version>${openstack4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.pacesys.openstack4j.connectors</groupId>
        <artifactId>openstack4j-httpclient</artifactId>
        <version>${openstack4j.version}</version>
      </dependency>
      <dependency>
        <groupId>com.toastcoders</groupId>
        <artifactId>yavijava</artifactId>
        <version>${yavijava.version}</version>
      </dependency>
      <dependency>
        <!-- vijava在中央仓库只有v5版本. -->
        <groupId>com.vmware</groupId>
        <artifactId>vijava</artifactId>
        <version>${vijava.version}</version>
      </dependency>
      <dependency>
        <groupId>org.restlet.jee</groupId>
        <artifactId>org.restlet.ext.slf4j</artifactId>
        <version>${restlet.version}</version>
      </dependency>
      <dependency>
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjrt</artifactId>
        <version>${aspectj.version}</version>
      </dependency>
      <dependency>
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjweaver</artifactId>
        <version>${aspectj.version}</version>
      </dependency>
      <dependency>
        <groupId>sshtools</groupId>
        <artifactId>j2ssh-common</artifactId>
        <version>${j2ssh.version}</version>
      </dependency>
      <dependency>
        <groupId>sshtools</groupId>
        <artifactId>j2ssh-core</artifactId>
        <version>${j2ssh.version}</version>
      </dependency>
      <!-- ol_gishost usage -->
      <dependency>
        <groupId>org.webjars</groupId>
        <artifactId>jquery</artifactId>
        <version>2.2.0</version>
      </dependency>
      <dependency>
        <groupId>org.webjars.npm</groupId>
        <artifactId>jquery.browser</artifactId>
        <version>0.0.8</version>
      </dependency>
      <dependency>
        <groupId>org.webjars</groupId>
        <artifactId>jquery-i18n-properties</artifactId>
        <version>1.2.2</version>
      </dependency>
      <dependency>
        <groupId>org.webjars</groupId>
        <artifactId>flat-ui</artifactId>
        <version>bcaf2de95e</version>
      </dependency>
      <dependency>
        <groupId>org.webjars.bower</groupId>
        <artifactId>underscore</artifactId>
        <version>1.8.2</version>
      </dependency>
      <dependency>
        <groupId>org.webjars</groupId>
        <artifactId>bootstrap</artifactId>
        <version>3.3.6</version>
      </dependency>
      <dependency>
        <groupId>org.webjars.bower</groupId>
        <artifactId>bootstrap-treeview</artifactId>
        <version>1.2.0</version>
      </dependency>
      <dependency>
        <groupId>org.webjars</groupId>
        <artifactId>datatables</artifactId>
        <version>1.10.15</version>
      </dependency>
      <dependency>
        <groupId>org.webjars</groupId>
        <artifactId>datatables-plugins</artifactId>
        <version>1.10.15</version>
      </dependency>
      <dependency>
        <groupId>org.webjars.npm</groupId>
        <artifactId>bootstrap-dialog</artifactId>
        <version>1.34.6</version>
      </dependency>
      <dependency>
        <groupId>pl.pragmatists</groupId>
        <artifactId>JUnitParams</artifactId>
        <version>1.1.1</version>
      </dependency>
      <dependency>
        <groupId>org.java-websocket</groupId>
        <artifactId>Java-WebSocket</artifactId>
        <version>${java-websocket.version}</version>
      </dependency>
      <!-- ugo -->
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.analyst.networkanalyst${ugo.platformId}</artifactId>
        <version>${ugo.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.analyst.spatialanalyst${ugo.platformId}</artifactId>
        <version>${ugo.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.analyst.terrainanalyst${ugo.platformId}</artifactId>
        <version>${ugo.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.analyst.trafficanalyst${ugo.platformId}</artifactId>
        <version>${ugo.version}</version>
      </dependency>
      <!--bdt-->
      <dependency>
        <groupId>com.supermap.bdt</groupId>
        <artifactId>bdt-core</artifactId>
        <exclusions>
          <exclusion>
            <groupId>javax.media</groupId>
            <artifactId>jai_core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.locationtech.geotrellis</groupId>
            <artifactId>geotrellis-spark_2.11</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.locationtech.geotrellis</groupId>
            <artifactId>geotrellis-raster_2.11</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.locationtech.geotrellis</groupId>
            <artifactId>geotrellis-gdal_2.11</artifactId>
          </exclusion>
        </exclusions>
        <version>${bdt.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.bdt</groupId>
        <artifactId>bdt-cpp-base</artifactId>
        <exclusions>
          <exclusion>
            <groupId>javax.media</groupId>
            <artifactId>jai_core</artifactId>
          </exclusion>
        </exclusions>
        <version>${bdt.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.bdt</groupId>
        <artifactId>bdt-analyst-vector</artifactId>
        <version>${bdt.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.bdt</groupId>
        <artifactId>bdt-analyst-vector-cpp</artifactId>
        <version>${bdt.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.bdt</groupId>
        <artifactId>bdt-analyst-raster</artifactId>
        <version>${bdt.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.locationtech.geotrellis</groupId>
            <artifactId>geotrellis-spark_2.11</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.locationtech.geotrellis</groupId>
            <artifactId>geotrellis-raster_2.11</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.locationtech.geotrellis</groupId>
            <artifactId>geotrellis-gdal_2.11</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.supermap.bdt</groupId>
        <artifactId>bdt-dsf-core</artifactId>
        <exclusions>
          <exclusion>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
          </exclusion>
        </exclusions>
        <version>${bdt.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.bdt</groupId>
        <artifactId>bdt-rddprovider-dsf</artifactId>
        <exclusions>
          <exclusion>
            <groupId>javax.media</groupId>
            <artifactId>jai_core</artifactId>
          </exclusion>
        </exclusions>
        <version>${bdt.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.bdt</groupId>
        <artifactId>bdt-rddprovider-sdx</artifactId>
        <version>${bdt.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.data${ugo.platformId}</artifactId>
        <version>${ugo.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.data.conversion${ugo.platformId}</artifactId>
        <version>${ugo.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.chart${ugo.platformId}</artifactId>
        <version>${ugo.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.data.processing${ugo.platformId}</artifactId>
        <version>${ugo.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.tilestorage${ugo.platformId}</artifactId>
        <version>${ugo.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.data.topology${ugo.platformId}</artifactId>
        <version>${ugo.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.mapping${ugo.platformId}</artifactId>
        <version>${ugo.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.realspace${ugo.platformId}</artifactId>
        <version>${ugo.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.realspace.spatialanalyst${ugo.platformId}</artifactId>
        <version>${ugo.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.realspace.networkanalyst${ugo.platformId}</artifactId>
        <version>${ugo.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.realspace.threeddesigner${ugo.platformId}</artifactId>
        <version>${ugo.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.analyst.navigation${ugo.platformId}</artifactId>
        <version>${ugo.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.analyst.addressmatching${ugo.platformId}</artifactId>
        <version>${ugo.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.license</artifactId>
        <version>${license.version}</version>
      </dependency>
      <!--dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.data.licensehasp${ugo.platformId}</artifactId>
        <version>${ugo.version}</version>
      </dependency-->
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.licensehasp</artifactId>
        <version>${license.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.licensemanager</artifactId>
        <version>${license.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.plot${ugo.platformId}</artifactId>
        <version>${ugo.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.analyst.spatialstatistics${ugo.platformId}</artifactId>
        <version>${ugo.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.iobjects</groupId>
        <artifactId>iobjects-layer-plugin</artifactId>
        <version>${iobjects.extension.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.locationtech.geotrellis</groupId>
            <artifactId>geotrellis-spark_2.11</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.locationtech.geotrellis</groupId>
            <artifactId>geotrellis-raster_2.11</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.locationtech.geotrellis</groupId>
            <artifactId>geotrellis-gdal_2.11</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.supermap.iobjects</groupId>
        <artifactId>iobjects-vectorpyramid</artifactId>
        <version>${iobjects.extension.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.iobjects</groupId>
        <artifactId>iobjects-dsf-gt_20</artifactId>
        <version>${iobjects.extension.version}</version>
      </dependency>
      <!-- 基础研发团队实现的一种更高效的二维绘制引擎，在多线程场景下，启用该引擎，可有效提升基于Geotools技术的绘制效率-->
      <dependency>
        <groupId>com.supermap.iobjects</groupId>
        <artifactId>iobjects-renderengine</artifactId>
        <version>${iobjects-renderengine.version}</version>
      </dependency>
      <!-- gp -->
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.geoprocessor.core</artifactId>
        <version>${gp.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap</groupId>
        <artifactId>com.supermap.geoprocessor.functions</artifactId>
        <version>${gp.version}</version>
      </dependency>
      <!-- ibase -->
      <dependency>
        <groupId>com.supermap.online.license</groupId>
        <artifactId>license-client-lib-deploy</artifactId>
        <version>${online.license.client}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.ibase</groupId>
        <artifactId>service-model</artifactId>
        <version>${ibase.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.ibase</groupId>
        <artifactId>service-model</artifactId>
        <type>test-jar</type>
        <version>${ibase.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.ibase</groupId>
        <artifactId>rest-sdk</artifactId>
        <version>${ibase.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.ibase</groupId>
        <artifactId>rest-sdk</artifactId>
        <type>test-jar</type>
        <version>${ibase.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.ibase</groupId>
        <artifactId>server-host-model</artifactId>
        <version>${ibase.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.ibase</groupId>
        <artifactId>server-host-model</artifactId>
        <type>test-jar</type>
        <version>${ibase.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.ibase</groupId>
        <artifactId>commons-utils-ugc</artifactId>
        <version>${ibase.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.ibase</groupId>
        <artifactId>server-hosts</artifactId>
        <version>${ibase.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.ibase</groupId>
        <artifactId>server-hosts</artifactId>
        <type>test-jar</type>
        <version>${ibase.version}</version>
      </dependency>
      <!-- ibase-commons -->
      <dependency>
        <groupId>com.supermap.ibase</groupId>
        <artifactId>ibase-jersey2-ext</artifactId>
        <version>${ibase-commons.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.ibase</groupId>
        <artifactId>ibase-shiro-ext-reflection</artifactId>
        <version>${ibase-commons.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.ibase</groupId>
        <artifactId>ibase-jersey2-ext-shiro</artifactId>
        <version>${ibase-commons.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.ibase</groupId>
        <artifactId>ibase-log4j-ext</artifactId>
        <version>${ibase-commons.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.ibase</groupId>
        <artifactId>ibase-pac4j-ext</artifactId>
        <version>${ibase-commons.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.blockchain</groupId>
        <artifactId>gt-blockchain</artifactId>
        <version>${gt-blockchain.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.blockchain</groupId>
        <artifactId>com.supermap.blockchain.fabric</artifactId>
        <version>${com.supermap.blockchain.fabric.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.vincentrussell</groupId>
        <artifactId>sql-to-mongo-db-query-converter</artifactId>
        <version>${sql.to.mongo.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.mongodb</groupId>
            <artifactId>*</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!--sps 依赖-->
      <dependency>
        <groupId>com.supermap.sps</groupId>
        <artifactId>sps-core</artifactId>
        <version>${sps.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.sps</groupId>
        <artifactId>sps-executeengine</artifactId>
        <version>${sps.version}</version>
      </dependency>

      <!--算子-->
      <dependency>
        <groupId>com.supermap.iobjects</groupId>
        <artifactId>com.supermap.iobjects.processes</artifactId>
        <version>${sps.version}</version>
      </dependency>
      <dependency>
        <groupId>com.supermap.iobjects</groupId>
        <artifactId>com.supermap.iobjects.processes.imagemanagement</artifactId>
        <version>${sps.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>com.supermap.analyst.networkanalyst</artifactId>
            <groupId>com.supermap.iobjects</groupId>
          </exclusion>
          <exclusion>
            <artifactId>com.supermap.analyst.spatialanalyst</artifactId>
            <groupId>com.supermap.iobjects</groupId>
          </exclusion>
          <exclusion>
            <artifactId>com.supermap.analyst.terrainanalyst</artifactId>
            <groupId>com.supermap.iobjects</groupId>
          </exclusion>
          <exclusion>
            <artifactId>com.supermap.data.conversion</artifactId>
            <groupId>com.supermap.iobjects</groupId>
          </exclusion>
          <exclusion>
            <artifactId>com.supermap.data.processing</artifactId>
            <groupId>com.supermap.iobjects</groupId>
          </exclusion>
          <exclusion>
            <artifactId>com.supermap.data.topology</artifactId>
            <groupId>com.supermap.iobjects</groupId>
          </exclusion>
          <exclusion>
            <artifactId>com.supermap.data</artifactId>
            <groupId>com.supermap.iobjects</groupId>
          </exclusion>
          <exclusion>
            <artifactId>com.supermap.mapping</artifactId>
            <groupId>com.supermap.iobjects</groupId>
          </exclusion>
          <exclusion>
            <artifactId>com.supermap.realspace.threeddesigner</artifactId>
            <groupId>com.supermap.iobjects</groupId>
          </exclusion>
          <exclusion>
            <artifactId>com.supermap.realspace.spatialanalyst</artifactId>
            <groupId>com.supermap.iobjects</groupId>
          </exclusion>
          <exclusion>
            <groupId>com.supermap.iobjects</groupId>
            <artifactId>com.supermap.realspace</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.supermap.iobjects</groupId>
            <artifactId>com.supermap.tilestorage</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.supermap.iobjects</groupId>
        <artifactId>com.supermap.iobjects.processes.processing</artifactId>
        <version>${sps.version}</version>
        <exclusions>
          <exclusion>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.supermap.iobjects</groupId>
            <artifactId>com.supermap.data.processing</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.github.nintha</groupId>
            <artifactId>sm-webp-imageio-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <!-- 包含junit, assertj, mockito等各类必须的java测试依赖 -->
    <dependency>
      <groupId>com.carrotsearch.randomizedtesting</groupId>
      <artifactId>randomizedtesting-runner</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- 首选assertj，遗留代码沿用hamcrest -->
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-integration</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Mockito does not produce the mockito-all artifact anymore -->
    <!-- https://github.com/mockito/mockito/wiki/What%27s-new-in-Mockito-2 -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>pl.pragmatists</groupId>
      <artifactId>JUnitParams</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <repositories>
    <repository>
      <id>ispeco</id>
      <name>iSPECO Maven Repo</name>
      <url>http://maven.ispeco.com/maven</url>
      <releases>
        <!-- always, daily(default), interval:15(minutes), never -->
        <updatePolicy>${repo.releases.updatePolicy}</updatePolicy>
        <!-- <updatePolicy>interval:15</updatePolicy> -->
        <checksumPolicy>fail</checksumPolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
        <!-- always, daily(default), interval:15(minutes), never -->
        <updatePolicy>${repo.snapshots.updatePolicy}</updatePolicy>
        <checksumPolicy>ignore</checksumPolicy>
      </snapshots>
    </repository>
    <repository>
      <id>ispeco-snapshots</id>
      <name>iSPECO Maven Snapshot Repo</name>
      <url>http://maven.ispeco.com/snapshots</url>
      <releases>
        <enabled>false</enabled>
        <!-- always, daily(default), interval:15(minutes), never -->
        <updatePolicy>${repo.releases.updatePolicy}</updatePolicy>
        <checksumPolicy>fail</checksumPolicy>
      </releases>
      <snapshots>
        <!-- always, daily(default), interval:15(minutes), never -->
        <updatePolicy>${repo.snapshots.updatePolicy}</updatePolicy>
        <checksumPolicy>ignore</checksumPolicy>
      </snapshots>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>ispeco</id>
      <name>iSPECO Maven Repo</name>
      <url>http://maven.ispeco.com/maven</url>
    </pluginRepository>
  </pluginRepositories>
  <build>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ftp</artifactId>
        <version>2.4</version>
      </extension>
    </extensions>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <excludes>
          <!-- Javadoc文档不放到jar包中。 -->
          <exclude>**/*Javadoc*.properties</exclude>
          <exclude>**/.svn</exclude>
          <exclude>**/CVS</exclude>
        </excludes>
      </resource>
    </resources>
    <!-- If your POM declares a parent, it will inherit plugin configuration from either the build/plugins or pluginManagement sections of the parent. -->
    <pluginManagement>
      <!-- 这里的配置（主要指version\executions\configuration）既影响当前pom也影响子pom, 注意按groupId,artifactId顺序排列。 -->
      <plugins>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${plugin.antrun.version}</version>
        </plugin>	  
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${plugin.assembly.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
          <version>${plugin.bundle.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${plugin.clean.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${plugin.compiler.version}</version>
          <configuration>
            <!--compilerArgument>-Xlint:unchecked</compilerArgument-->
            <source>${maven.compiler.source}</source>
            <target>${maven.compiler.target}</target>
            <optimize>true</optimize>
            <encoding>${project.build.sourceEncoding}</encoding>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${plugin.dependency.version}</version>
          <configuration>
            <deployAtEnd>true</deployAtEnd>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${plugin.deploy.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-eclipse-plugin</artifactId>
          <version>${plugin.eclipse.version}</version>
        </plugin>
        <!-- 控制项目约定的maven插件，达到约定优于配置的效果 huangqh -->
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${plugin.enforcer.version}</version>
          <!-- <inherited>false</inherited> -->
          <configuration>
            <fail>true</fail>
            <skip>false</skip>
          </configuration>
          <executions>
            <execution>
              <id>enforce-versions</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <!-- jasmine-maven-plugin 需要 3.1.0 以上的maven。 ahnan -->
                    <version>[3.1.0,)</version>
                  </requireMavenVersion>
                  <requireJavaVersion>
                    <!-- 一些第三方库需要 1.8 以上的JRE（java 8）。如geotools 15，jetty 9.3等。 -->
                    <version>[1.8.0,)</version>
                  </requireJavaVersion>
                </rules>
              </configuration>
            </execution>
            <execution>
              <id>enforce-dependencies</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <skip>true</skip>
                <!-- 暂时忽略 -->
                <fail>false</fail>
                <rules>
                  <!-- 暂时忽略这个 -->
                  <!--banTransitiveDependencies>
                    <excludes>
                      <exclude>*:*</exclude>
                    </excludes>
                    <includes>
                      <include>com.supermap.*:*</include>
                    </includes>
                  </banTransitiveDependencies-->
                  <dependencyConvergence>
                  </dependencyConvergence>
                  <bannedDependencies>
                    <excludes>
                      <!-- excludes - a list of artifacts to ban -->
                      <exclude>ch.qos.logback:logback*</exclude>
                      <exclude>xalan:xalan</exclude>
                      <exclude>xerces:*</exclude>
                      <exclude>org.asynchttpclient:*</exclude>
                      <exclude>it.geosolutions.imageio-ext:imageio-ext-png</exclude>
                      <exclude>it.geosolutions.imageio-ext:imageio-ext-tiff</exclude>
                      <exclude>javax.media:jai_core</exclude>
                      <exclude>javax.media:jai_codec</exclude>
                      <exclude>javax.media:jai_imageio</exclude>
                    </excludes>
                    <includes>
                    </includes>
                  </bannedDependencies>
                </rules>
              </configuration>
            </execution>
            <execution>
              <id>enforce-module-convergence</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <skip>true</skip>
                <!-- 暂时忽略 -->
                <rules>
                  <reactorModuleConvergence>
                    <message>The reactor is not valid</message>
                    <ignoreModuleDependencies>true</ignoreModuleDependencies>
                  </reactorModuleConvergence>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>${plugin.install.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${plugin.failsafe.version}</version>
          <executions>
            <execution>
              <id>integration-test</id>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <!-- jdk7/jdk8 上面运行某些测试时会报错java.lang.VerifyError -->
            <!-- <argLine>-noverify -XX:-UseSplitVerifier</argLine> -->
            <!-- 让it不随机运行,以定位发布前的崩溃问题. ahnan@20131010 -->
            <!--<runOrder>random</runOrder>-->
            <!-- 让it全部运行,以更好定位问题. ahnan -->
            <testFailureIgnore>true</testFailureIgnore>
            <!-- 以下两行为多线程运行测试的参数，默认为单线程。 -->
            <!-- <parallel>methods</parallel> -->
            <!-- <threadCount>3</threadCount> -->
            <!-- 注释掉多进程方式，工作空间/数据相关测试案例貌似未考虑此种运行方式。 -->
            <!-- <forkCount>1C</forkCount> -->
            <!-- 每个CPU核运行1个进程 -->
            <!-- reuseForks的默认值为true，默认重用进程。 -->
            <!--reuseForks>true</reuseForks-->
            <systemPropertyVariables>
              <!-- RandomizedTesting library system properties : SysGlobals-->
              <tests.prefix>rtests</tests.prefix>
              <rtests.iters>${tests.iters}</rtests.iters>
              <rtests.seed>${tests.seed}</rtests.seed>
              <rtests.nightly>${tests.nightly}</rtests.nightly>
              <rtests.weekly>${tests.weekly}</rtests.weekly>
              <rtests.awaitsfix>${tests.awaitsfix}</rtests.awaitsfix>
              <rtests.slow>${tests.slow}</rtests.slow>
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${plugin.jar.version}</version>
          <configuration>
            <archive>
              <index>true</index>
              <compress>true</compress>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
              <manifestEntries>
                <ugoversion>${ugo.version}</ugoversion>
                <Implementation-Build>$\{buildNumber}</Implementation-Build>
              </manifestEntries>
            </archive>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>test-jar</goal>
              </goals>
              <configuration>
                <skipIfEmpty>true</skipIfEmpty>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5.3</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${plugin.resources.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>${plugin.project-info-reports.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>${plugin.site.version}</version>
          <!-- 配置site 的国际化，默认为en，更改为zh_CN，以及设置编码格式为utf-8 -->
          <configuration>
            <locales>zh_CN</locales>
            <inputEncoding>utf-8</inputEncoding>
            <outputEncoding>utf-8</outputEncoding>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${plugin.shade.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.2.1</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <phase>verify</phase>
              <!--  要绑定到的生命周期的阶段 在 verify 之后，install之前执行下面指定的goal -->
              <goals>
                <goal>jar-no-fork</goal>
                <!-- 类似执行mvn source:jar -->
              </goals>
              <configuration>
                <!-- The below specified attribute 'attach' false will disable the sources.jar not included in the artifact list -->
                <attach>true</attach>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${plugin.surefire.version}</version>
          <dependencies>
            <!-- 指定使用junit47，参考: http://maven.apache.org/surefire/maven-surefire-plugin/examples/junit.html -->
            <dependency>
              <groupId>org.apache.maven.surefire</groupId>
              <artifactId>surefire-junit47</artifactId>
              <version>${plugin.surefire.version}</version>
            </dependency>
          </dependencies>
          <configuration>
            <!-- <argLine>-noverify -XX:-UseSplitVerifier</argLine> -->
            <!-- jdk7/jdk8 上面运行某些测试时会报错java.lang.VerifyError -->
            <!-- 默认是 filesystem，故windows上顺序，某些linux上(如 build_215_openSUSE11_jdk7)逆序，Supported values are "alphabetical", "reversealphabetical", "random", "hourly" (alphabetical on even hours, reverse alphabetical on odd hours), "failedfirst", "balanced" and "filesystem".  -->
            <!-- reversealphabetical时会有20多个失败案例，alphabetical会有1个失败案例，故改用默认设置，逐步排查那些失败案例。 -ahnan -->
            <!--<runOrder>alphabetical</runOrder>-->
            <classpathDependencyExcludes>
              <!-- 排除logback依赖，但只在ut时生效，下同。 -->
              <classpathDependencyExclude>ch.qos.logback:logback-classic</classpathDependencyExclude>
            </classpathDependencyExcludes>
            <!-- 让ut全部运行,以更好定位问题. ahnan -->
            <testFailureIgnore>true</testFailureIgnore>
            <!-- parallel>methods</parallel -->
            <!-- 注释掉多进程方式，工作空间/数据相关测试案例貌似未考虑此种运行方式。 -->
            <!--forkCount>1C</forkCount-->
            <!-- 每个CPU核运行1个进程 -->
            <reuseForks>true</reuseForks>
            <!-- mvn clean install -DskipUTs 即可只运行it而不运行ut。 -->
            <!-- mvn clean install -DskipITs 是系统内置支持，即可只运行ut而不运行it。 -->
            <!-- mvn clean install -DskipUTs -DskipITs 可以确保两者都不运行。 -->
            <!-- mvn clean install -DskipTests 也可以确保两者都不运行。 -->
            <!-- mvn clean install -Dmaven.test.skip=true 可以确保两者都不运行，但也不会编译测试代码。 -->
            <skipExec>${skipUTs}</skipExec>
            <!--<skipTests>${skipUTs}</skipTests>-->
            <systemPropertyVariables>
              <!-- RandomizedTesting library system properties -->
              <tests.prefix>rtests</tests.prefix>
              <rtests.iters>${tests.iters}</rtests.iters>
              <rtests.seed>${tests.seed}</rtests.seed>
              <rtests.nightly>${tests.nightly}</rtests.nightly>
              <rtests.weekly>${tests.weekly}</rtests.weekly>
              <rtests.awaitsfix>${tests.awaitsfix}</rtests.awaitsfix>
              <rtests.slow>${tests.slow}</rtests.slow>
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>${plugin.war.version}</version>
        </plugin>
        <!-- Using scala-maven-plugin to Compile Scala and Java project.-->
        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>${plugin.scala.compiler.version}</version>
          <executions>
            <execution>
              <id>scala-compile-first</id>
              <phase>process-resources</phase>
              <goals>
                <goal>add-source</goal>
                <goal>compile</goal>
              </goals>
            </execution>
            <execution>
              <goals>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>${plugin.frontend.version}</version>
        </plugin>
        <plugin>
          <groupId>com.googlecode.jstd-maven-plugin</groupId>
          <artifactId>jstd-maven-plugin</artifactId>
          <version>1.3.5.1</version>
        </plugin>
        <plugin>
          <!-- Apache RAT (Release Audit Tool) 是一个用来检查软件许可证发行的准确性和高效性的工具 -->
          <groupId>org.apache.rat</groupId>
          <artifactId>apache-rat-plugin</artifactId>
          <version>0.13</version>
        </plugin>
        <plugin>
          <!-- 测试覆盖度插件，现暂未使用，改用jacoco -->
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>cobertura-maven-plugin</artifactId>
          <version>${plugin.cobertura.version}</version>
          <dependencies>
            <!-- 排除 logback-classic 依赖 -->
            <dependency>
              <groupId>net.sourceforge.cobertura</groupId>
              <artifactId>cobertura-runtime</artifactId>
              <version>2.1.1</version>
              <type>pom</type>
              <exclusions>
                <exclusion>
                  <groupId>ch.qos.logback</groupId>
                  <artifactId>logback-classic</artifactId>
                </exclusion>
              </exclusions>
            </dependency>
            <dependency>
              <groupId>net.sourceforge.cobertura</groupId>
              <artifactId>cobertura</artifactId>
              <version>2.1.1</version>
              <exclusions>
                <exclusion>
                  <groupId>ch.qos.logback</groupId>
                  <artifactId>logback-classic</artifactId>
                </exclusion>
              </exclusions>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>${plugin.exec.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>2.0.0</version>
        </plugin>		
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>native2ascii-maven-plugin</artifactId>
          <version>${plugin.native2ascii.version}</version>
          <executions>
            <execution>
              <id>native2ascii-utf8</id>
              <goals>
                <goal>native2ascii</goal>
              </goals>
              <configuration>
                <!--<src>src/main/resources</src>-->
                <!--<dest>target/classes</dest>-->
                <encoding>UTF8</encoding>
                <includes>
                  <include>**/*_zh_*.properties</include>
                  <include>**/*_CHS.properties</include>
                </includes>
                <excludes>
                  <exclude>**/*Javadoc*.properties</exclude>
                </excludes>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${plugin.versions.version}</version>
        </plugin>
        <plugin>
            <groupId>org.cyclonedx</groupId>
            <artifactId>cyclonedx-maven-plugin</artifactId>
            <version>2.5.1</version>
            <executions>
                <execution>
                    <phase>package</phase>
                    <goals>
                        <goal>makeAggregateBom</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <projectType>library</projectType>
                <schemaVersion>1.3</schemaVersion>
                <includeBomSerialNumber>true</includeBomSerialNumber>
                <includeCompileScope>true</includeCompileScope>
                <includeProvidedScope>true</includeProvidedScope>
                <includeRuntimeScope>true</includeRuntimeScope>
                <includeSystemScope>true</includeSystemScope>
                <includeTestScope>false</includeTestScope>
                <includeLicenseText>false</includeLicenseText>
                <outputFormat>all</outputFormat>
                <outputName>bom</outputName>
            </configuration>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${plugin.sonar.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.tomcat.maven</groupId>
          <artifactId>tomcat6-maven-plugin</artifactId>
          <version>${plugin.tomcat.version}</version>
          <configuration>
            <url>http://localhost:8090/manager</url>
            <path>/${project.build.finalName}</path>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.tomcat.maven</groupId>
          <artifactId>tomcat7-maven-plugin</artifactId>
          <version>${plugin.tomcat.version}</version>
          <configuration>
            <url>http://localhost:8090/manager</url>
            <path>/${project.build.finalName}</path>
          </configuration>
        </plugin>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <!-- comment it when using IDEA13/14/15 -->
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>ch.qos.cal10n.plugins</groupId>
                    <artifactId>maven-cal10n-plugin</artifactId>
                    <versionRange>[0.7.4,)</versionRange>
                    <goals>
                      <goal>verify</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>native2ascii-maven-plugin</artifactId>
                    <versionRange>[1.0-beta-1,)</versionRange>
                    <goals>
                      <goal>native2ascii</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <versionRange>[0.7,)</versionRange>
                    <goals>
                      <goal>prepare-agent</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
        <!-- cal10n 枚举检查工具 -->
        <plugin>
          <groupId>ch.qos.cal10n.plugins</groupId>
          <artifactId>maven-cal10n-plugin</artifactId>
          <version>${cal10n.version}</version>
        </plugin>
        <!-- 代码混淆工具 -->
        <plugin>
          <groupId>com.github.wvengen</groupId>
          <artifactId>proguard-maven-plugin</artifactId>
          <version>${plugin.proguard.version}</version>
          <executions>
            <execution>
              <!--phase>pre-integration-test</phase-->
              <phase>verify</phase>
              <goals>
                <goal>proguard</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <obfuscate>true</obfuscate>
            <proguardInclude>${basedir}/../proguard.conf</proguardInclude>
            <putLibraryJarsInTempDir>true</putLibraryJarsInTempDir>
            <injarNotExistsSkip>true</injarNotExistsSkip>
            <options>
              <!-- 参考： http://proguard.sourceforge.net/manual/examples.html#library -->
              <!--  raoqy  解决代码混淆后，资源目录缺少的问题 -->
              <option>-keepdirectories</option>
              <option>-ignorewarnings</option>
              <option>-dontnote</option>
              <option>-dontshrink</option>
              <option>-dontoptimize</option>
              <!-- dontpreverify 这个参数可能导致java8环境下出现verifyerror -->
              <!-- <option>-dontpreverify</option> -->
              <!-- 确保至少有一个 -keep 设置，以免在非modules目录下执行mvn时出错。 ahnan -->
              <option>-keep public class * { public protected *;}</option>
              <option>-keep public enum * {*;}</option>
              <option>-keepparameternames</option>
              <option>-renamesourcefileattribute SourceFile</option>
              <option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,*Annotation*,EnclosingMethod</option>
              <option>-keepclassmembernames class * {
                java.lang.Class class$(java.lang.String);
                java.lang.Class class$(java.lang.String, boolean);}</option>
              <option>-keepclassmembers,allowoptimization enum * {
                public static **[] values();
                public static ** valueOf(java.lang.String);}</option>
              <option>-keepclassmembers class * implements java.io.Serializable {
                static final long serialVersionUID;
                private static final java.io.ObjectStreamField[] serialPersistentFields;
                private void writeObject(java.io.ObjectOutputStream);
                private void readObject(java.io.ObjectInputStream);
                java.lang.Object writeReplace();
                java.lang.Object readResolve();}</option>
            </options>
            <libs>
              <lib>${java.home}/lib/rt.jar</lib>
              <lib>${java.home}/lib/jsse.jar</lib>
              <lib>${java.home}/lib/jce.jar</lib>
            </libs>
            <!-- 排除对bdt的混淆 -->
            <exclusions>
              <exclusion>
                <groupId>com.supermap</groupId>
                <artifactId>com.supermap.bdt.core</artifactId>
              </exclusion>
            </exclusions>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>net.sf.proguard</groupId>
              <artifactId>proguard-base</artifactId>
              <version>${proguard.version}</version>
              <scope>runtime</scope>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>clirr-maven-plugin</artifactId>
          <version>${plugin.clirr.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>1.4</version>
          <executions>
            <execution>
              <phase>validate</phase>
              <goals>
                <goal>create</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <doCheck>false</doCheck>
            <doUpdate>false</doUpdate>
            <providerImplementations>
              <svn>javasvn</svn>
            </providerImplementations>
          </configuration>
        </plugin>
        <plugin>
          <!-- 测试覆盖度插件，在sonar中使用 -->
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${plugin.jacoco.version}</version>
          <configuration>
            <append>true</append>
          </configuration>
          <executions>
            <execution>
              <id>agent-for-ut</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <!-- http://stackoverflow.com/questions/12269558/maven-jacoco-plugin-error -->
                <propertyName>jacoco.agent.ut.arg</propertyName>
              </configuration>
            </execution>
            <execution>
              <id>agent-for-it</id>
              <goals>
                <goal>prepare-agent-integration</goal>
              </goals>
              <configuration>
                <propertyName>jacoco.agent.it.arg</propertyName>
                <!-- The destination file for the code coverage report has to be set to the same value
                in the parent pom and in each module pom. Then JaCoCo will add up information in
                the same report, so that, it will give the cross-module code coverage. -->
                <destFile>${sonar.jacoco.itReportPath}</destFile>
              </configuration>
            </execution>
            <execution>
              <id>jacoco-site</id>
              <phase>verify</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
              </configuration>
            </execution>
            <execution>
              <id>jacoco-site-it</id>
              <phase>verify</phase>
              <goals>
                <goal>report-integration</goal>
              </goals>
              <configuration>
                <dataFile>${sonar.jacoco.itReportPath}</dataFile>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <!-- mvn org.pitest:pitest-maven:mutationCoverage -->
          <groupId>org.pitest</groupId>
          <artifactId>pitest-maven</artifactId>
          <version>${plugin.pitest.version}</version>
          <configuration>
            <threads>4</threads>
            <outputFormats>
              <outputFormat>XML</outputFormat>
              <outputFormat>HTML</outputFormat>
            </outputFormats>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <!-- 这里的配置只对当前pom有效, 注意按groupId,artifactId顺序排列。 -->
      <plugin>
        <groupId>com.github.wvengen</groupId>
        <artifactId>proguard-maven-plugin</artifactId>
      </plugin>
      <!-- 控制项目约定的maven插件，达到约定优于配置的效果 huangqh -->
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <configuration>
          <fail>false</fail>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>clirr-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <!-- js unit test -->
        <groupId>com.github.searls</groupId>
        <artifactId>jasmine-maven-plugin</artifactId>
        <version>${jasmine.version}</version>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>dev</id>
      <properties>
        <proguard.skip>true</proguard.skip>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- 将jacoco加入build阶段而已，具体的配置在前面的 pluginManagement 里面处理。
        | 使用方式： step1, mvn clean install -Pjacoco
        |            step2, mvn sonar:sonar
      -->
      <id>jacoco</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <!-- http://stackoverflow.com/questions/12269558/maven-jacoco-plugin-error -->
              <argLine>-noverify -XX:-UseSplitVerifier ${jacoco.agent.ut.arg}</argLine>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <!-- http://stackoverflow.com/questions/12269558/maven-jacoco-plugin-error -->
              <argLine>-noverify -XX:-UseSplitVerifier ${jacoco.agent.it.arg}</argLine>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- 既执行jacoco并且也添加JUnitListener，从而可以将ut和覆盖到的源码对应起来，较占内存，CI上用的少.
        | 使用方式： step1, mvn clean install -Psonar
        |            step2, mvn sonar:sonar
      -->
      <id>sonar</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <!-- http://stackoverflow.com/questions/12269558/maven-jacoco-plugin-error -->
              <argLine>-noverify -XX:-UseSplitVerifier ${jacoco.agent.ut.arg}</argLine>
              <parallel/>
              <threadCount>1</threadCount>
              <properties>
                <!-- Specific to mapping unit tests and covered code for sonar -->
                <property>
                  <!-- 下面这个listener有缺陷，不支持多线程运行测试，且和p-ugc模块中的reuseForks=false 不兼容(SONARJAVA-728)，特说明。 -ahnan -->
                  <!-- 打开ut的设置。当mvn sonar:sonar 出现oom问题，可通过调整最大内存进行处理，如设置MAVEN_OPTS的-Xmx3600m。 -ahnan -->
                  <name>listener</name>
                  <value>org.sonar.java.jacoco.JUnitListener</value>
                </property>
              </properties>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <!-- http://stackoverflow.com/questions/12269558/maven-jacoco-plugin-error -->
              <argLine>-noverify -XX:-UseSplitVerifier ${jacoco.agent.it.arg}</argLine>
              <properties>
                <!-- Specific to mapping unit tests and covered code for sonar -->
                <property>
                  <!-- 打开IT的设置。 -->
                  <name>listener</name>
                  <value>org.sonar.java.jacoco.JUnitListener</value>
                </property>
              </properties>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <groupId>org.sonarsource.java</groupId>
          <artifactId>sonar-jacoco-listeners</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>sp</id>
      <properties>
        <sonar.analysis.mode>preview</sonar.analysis.mode>
        <sonar.issuesReport.html.enable>true</sonar.issuesReport.html.enable>
        <sonar.login>iserver</sonar.login>
        <sonar.password>iserver</sonar.password>
      </properties>
    </profile>
    <profile>
      <id>9001</id>
      <properties>
        <sonar.host.url>http://sonar.ispeco.com:9001</sonar.host.url>
      </properties>
    </profile>
    <profile>
      <id>9450</id>
      <properties>
        <sonar.host.url>http://sonar.ispeco.com:9450</sonar.host.url>
      </properties>
    </profile>
    <profile>
      <id>9530</id>
      <properties>
        <sonar.host.url>http://sonar.ispeco.com:9530</sonar.host.url>
      </properties>
    </profile>
    <!-- 以下为用于跨平台的profile，对ugo版本、sqlite版本等进行了设置 -->
    <profile>
      <id>linux</id>
      <activation>
        <os>
          <family>linux</family>
        </os>
      </activation>
      <properties>
        <ugo.platformId>-linux</ugo.platformId>
      </properties>
    </profile>
    <profile>
      <id>aix</id>
      <activation>
        <os>
          <family>aix</family>
        </os>
      </activation>
      <modules>
      </modules>
      <properties>
        <ugo.platformId>-aix</ugo.platformId>
        <ugo.version>[7.1.1-12210,8.1)</ugo.version>
        <sqlite.version>${sqlite.version.forAIX}</sqlite.version>
      </properties>
    </profile>
    <profile>
      <id>linux-FT1500a</id>
      <activation>
        <os>
          <family>linuxFT1500a</family>
        </os>
      </activation>
      <modules>
      </modules>
      <properties>
        <ugo.platformId>-linux-FT1500a</ugo.platformId>
        <sqlite.version>${sqlite.version.forlinuxFT1500a}</sqlite.version>
      </properties>
    </profile>
    <profile>
      <id>customUGO</id>
      <build>
        <plugins>
          <!-- 为了CI可以使用指定位置的UGO -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <environmentVariables>
                <PATH>${UGO_HOME}/Bin${path.separator}${env.PATH}</PATH>
                <!-- windows -->
                <LD_LIBRARY_PATH>${UGO_HOME}/Bin${path.separator}${env.LD_LIBRARY_PATH}</LD_LIBRARY_PATH>
                <!-- linux -->
                <LIBPATH>${UGO_HOME}/Bin${path.separator}${env.LIBPATH}</LIBPATH>
                <!-- aix -->
              </environmentVariables>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <environmentVariables>
                <PATH>${UGO_HOME}/Bin${path.separator}${env.PATH}</PATH>
                <!-- windows -->
                <LD_LIBRARY_PATH>${UGO_HOME}/Bin${path.separator}${env.LD_LIBRARY_PATH}</LD_LIBRARY_PATH>
                <!-- linux -->
                <LIBPATH>${UGO_HOME}/Bin${path.separator}${env.LIBPATH}</LIBPATH>
                <!-- aix -->
              </environmentVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>java11</id>
      <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <!--低版本的plugin-scala-compiler不支持jdk11, -->
        <plugin.scala.compiler.version>4.3.0</plugin.scala.compiler.version>
      </properties>
      <activation>
        <jdk>11</jdk>
      </activation>
      <build>
        <plugins>
          <!-- 代码混淆工具 -->
          <plugin>
            <groupId>com.github.wvengen</groupId>
            <artifactId>proguard-maven-plugin</artifactId>
            <version>${plugin.proguard.version}</version>
            <configuration>
              <libs>
                <lib>${java.home}/jmods/java.sql.jmod</lib>
                <lib>${java.home}/jmods/java.xml.jmod</lib>
                <lib>${java.home}/jmods/java.rmi.jmod</lib>
                <lib>${java.home}/jmods/java.base.jmod</lib>
                <lib>${java.home}/jmods/java.naming.jmod</lib>
                <lib>${java.home}/jmods/java.logging.jmod</lib>
                <lib>${java.home}/jmods/java.desktop.jmod</lib>
                <lib>${java.home}/jmods/java.management.jmod</lib>
              </libs>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${plugin.surefire.version}</version>
            <configuration>
              <argLine>--add-opens java.base/jdk.internal.loader=ALL-UNNAMED</argLine>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
